%!PS-Adobe-3.0
%%Creator: groff version 1.19.1
%%CreationDate: Fri Nov 30 03:23:22 2012
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Times-Italic
%%DocumentSuppliedResources: file x86stack.eps
%%+ file obj.eps
%%+ file maps.eps
%%+ file compile.eps
%%+ procset grops 1.19 1
%%Pages: 30
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Courier@0 ENC0/Courier RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 122.742(ECE466:Compilers Unit)69.336 60 R(6/pg 1)
2.25 E(\2512012 Jef)126.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Bold@0 SF(Compiler)187.353 120 Q 3.25(,A)-1.196 G(ssembler)-3.25
E 3.25(,L)-1.196 G(ink)-3.25 E(er)-.13 E/F2 13/Times-Roman@0 SF 2.302
(This course concerns itself with the compiler proper)33.336 156 R 5.552
(,w)-.52 G 2.302(hich tak)-5.552 F 2.302(es a high-le)-.13 F -.195(ve)
-.325 G 5.552(ls).195 G(ource)-5.552 E 1.34(language such as the e)
33.336 171 R 1.341
(xample used in this course, C, and translates it into an assembly)-.195
F 4.914(language. In)33.336 186 R 1.664(the UNIX programming frame)4.914
F -.13(wo)-.325 G 1.664(rk, assembly language \214les traditionally).13
F(ha)33.336 201 Q .39 -.195(ve a)-.26 H/F3 13/Courier@0 SF(.s)3.445 E F2
(suf)3.25 E(\214x, and are processed by the assembler)-.325 E 3.25(,c)
-.52 G(alled)-3.25 E F3(as)3.25 E F2(.)A 1.253
(The result of assembly is a)33.336 222 R F1 -.234(re)4.503 G 1.253
(locatable object \214le).234 F F2 4.503(,w)C 1.253(hich has a)-4.503 F
F3(.o)4.503 E F2(suf)4.503 E 4.503(\214x. It)-.325 F 1.253(is typical)
4.503 F 1.902(with lar)33.336 237 R 1.902(ger projects to di)-.234 F
1.902(vide the code among multiple source \214les.)-.325 F 1.901
(When part of the)8.401 F 2.268(project is changed, only the source \
\214le or \214les containing this change need to be re-)33.336 252 R
2.269(compiled and re-assembled.)33.336 267 R 2.269
(The result is then link)8.769 F 2.268(ed with the object \214les pre)
-.13 F(viously)-.325 E(produced, which ha)33.336 282 Q .39 -.195(ve n)
-.26 H(ot been af).195 E(fected by the change.)-.325 E 2.525
(This model allo)33.336 303 R 2.526(ws intermixing of modules from dif)
-.325 F 2.526(ferent source languages \(although)-.325 F .338
(issues of run-time calling con)33.336 318 R -.195(ve)-.52 G .338
(ntion creep in, e.g. the nested visibility of procedures and).195 F
.894(local v)33.336 333 R .894(ariables in a language such as P)-.325 F
.895(ascal vs the more \215at global/local model of C\) or)-.195 F .607
(modules which are written directly in assembly language.)33.336 348 R
.606(The latter is commonly found)7.107 F 3.671(in operating systems k)
33.336 363 R 3.672
(ernel code or in specialized graphics/multimedia applications)-.13 F
1.894(which are looking to e)33.336 378 R 1.893
(xploit machine-speci\214c optimizations or specialities such as the)
-.195 F(SSE instructions under X86.)33.336 393 Q 9.802
(Furthermore, most programming en)33.336 414 R 9.802(vironments e)-.52 F
9.802(xpect a standard library of)-.195 F 6.015(functions/procedures, s\
uch as the Standard C library \(printf, etc.\), and often a)33.336 429 R
1.393(programmer will w)33.336 444 R 1.393(ant to mak)-.13 F 4.643(eu)
-.13 G 1.394
(se of a specialized library \(e.g. in C the \215oating point)-4.643 F
.49(functions are in the)33.336 459 R F3(m)3.739 E F2 3.739
(library\). The)3.739 F .489(UNIX programming frame)3.739 F -.13(wo)
-.325 G .489(rk implements libraries).13 F .574
(as a single \214le which is an collection of)33.336 474 R F3(.o)3.824 E
F2 .574(\214les in a format called)3.824 F F3(ar)3.824 E F2 .574
(\(this is an archi)3.824 F -.195(ve)-.325 G
(format similar in concept to)33.336 489 Q F3(tar)3.25 E F2(or)3.25 E F3
(zip)3.25 E F2(\).)A .932(It is the link)33.336 510 R .932
(er program, called)-.13 F F3(ld)4.182 E F2 .932
(in UNIX \(because an older synon)4.182 F .932(ym for the link)-.195 F
.931(er is)-.13 F(the)33.336 525 Q F3(loader)4.284 E F2 4.284(\)w)C
1.034(hich collects the v)-4.284 F 1.034
(arious object \214les, including those referenced through)-.325 F
(libraries, and combines them into a monolithic, coherent, e)33.336 540
Q -.195(xe)-.195 G(cutable \214le.).195 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(6/pg 2)
2.25 E(\2512012 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E 0 0 468 713
-382.014 582 33.336 502.014 PBEGIN
%%BeginDocument: compile.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: compile.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Sep 20 21:36:37 2006
%%For: hak@lex ()
%%BoundingBox: 0 0 713 582
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 582 moveto 0 0 lineto 713 0 lineto 713 582 lineto closepath clip newpath
-53.3 567.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
n 8925 2475 1135 1135 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
3315 1755 m 3315 1695 l 3163 1695 l 3283 1725 l 3163 1755 l cp
eoclip
n 2325 1725 m
 3300 1725 l gs col0 s gr gr

% arrowhead
n 3163 1755 m 3283 1725 l 3163 1695 l  col0 s
% Polyline
gs  clippath
3315 2130 m 3315 2070 l 3163 2070 l 3283 2100 l 3163 2130 l cp
eoclip
n 2325 2100 m
 3300 2100 l gs col0 s gr gr

% arrowhead
n 3163 2130 m 3283 2100 l 3163 2070 l  col0 s
% Polyline
gs  clippath
3315 2580 m 3315 2520 l 3163 2520 l 3283 2550 l 3163 2580 l cp
eoclip
n 2325 2550 m
 3300 2550 l gs col0 s gr gr

% arrowhead
n 3163 2580 m 3283 2550 l 3163 2520 l  col0 s
% Polyline
gs  clippath
5265 2130 m 5265 2070 l 5113 2070 l 5233 2100 l 5113 2130 l cp
eoclip
n 4275 2100 m
 5250 2100 l gs col0 s gr gr

% arrowhead
n 5113 2130 m 5233 2100 l 5113 2070 l  col0 s
% Polyline
gs  clippath
5265 1755 m 5265 1695 l 5113 1695 l 5233 1725 l 5113 1755 l cp
eoclip
n 4275 1725 m
 5250 1725 l gs col0 s gr gr

% arrowhead
n 5113 1755 m 5233 1725 l 5113 1695 l  col0 s
% Polyline
gs  clippath
5265 2580 m 5265 2520 l 5113 2520 l 5233 2550 l 5113 2580 l cp
eoclip
n 4275 2550 m
 5250 2550 l gs col0 s gr gr

% arrowhead
n 5113 2580 m 5233 2550 l 5113 2520 l  col0 s
% Polyline
n 2580 3825 m 2475 3825 2475 5070 105 arcto 4 {pop} repeat
  2475 5175 3720 5175 105 arcto 4 {pop} repeat
  3825 5175 3825 3930 105 arcto 4 {pop} repeat
  3825 3825 2580 3825 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
3266 3754 m 3323 3773 l 3371 3629 l 3305 3734 l 3314 3610 l cp
eoclip
n 3675 2625 m
 3300 3750 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 3314 3610 m 3305 3734 l 3371 3629 l  col0 s
% Polyline
n 5205 3900 m 5100 3900 5100 5070 105 arcto 4 {pop} repeat
  5100 5175 7470 5175 105 arcto 4 {pop} repeat
  7575 5175 7575 4005 105 arcto 4 {pop} repeat
  7575 3900 5205 3900 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 1005 3750 m 900 3750 900 5145 105 arcto 4 {pop} repeat
  900 5250 1995 5250 105 arcto 4 {pop} repeat
  2100 5250 2100 3855 105 arcto 4 {pop} repeat
  2100 3750 1005 3750 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 5430 5175 m 5325 5175 5325 5895 105 arcto 4 {pop} repeat
  5325 6000 7245 6000 105 arcto 4 {pop} repeat
  7350 6000 7350 5280 105 arcto 4 {pop} repeat
  7350 5175 5430 5175 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
5973 3845 m 6032 3834 l 6004 3685 l 5997 3809 l 5945 3696 l cp
eoclip
n 5775 2625 m
 6000 3825 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 5945 3696 m 5997 3809 l 6004 3685 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
1617 3683 m 1676 3695 l 1707 3547 l 1653 3659 l 1648 3535 l cp
eoclip
n 1875 2625 m
 1650 3675 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 1648 3535 m 1653 3659 l 1707 3547 l  col0 s
% Polyline
gs  clippath
7965 1830 m 7965 1770 l 7813 1770 l 7933 1800 l 7813 1830 l cp
eoclip
n 6075 1800 m
 7950 1800 l gs col0 s gr gr

% arrowhead
n 7813 1830 m 7933 1800 l 7813 1770 l  col0 s
% Polyline
gs  clippath
7740 2205 m 7740 2145 l 7588 2145 l 7708 2175 l 7588 2205 l cp
eoclip
n 6150 2175 m
 7725 2175 l gs col0 s gr gr

% arrowhead
n 7588 2205 m 7708 2175 l 7588 2145 l  col0 s
% Polyline
gs  clippath
7665 2505 m 7665 2445 l 7513 2445 l 7633 2475 l 7513 2505 l cp
eoclip
n 6150 2475 m
 7650 2475 l gs col0 s gr gr

% arrowhead
n 7513 2505 m 7633 2475 l 7513 2445 l  col0 s
% Polyline
gs  clippath
10665 2505 m 10665 2445 l 10513 2445 l 10633 2475 l 10513 2505 l cp
eoclip
n 10050 2475 m
 10650 2475 l gs col0 s gr gr

% arrowhead
n 10513 2505 m 10633 2475 l 10513 2445 l  col0 s
% Polyline
n 10725 1725 m 12750 1725 l 12750 9450 l 10725 9450 l
 cp gs col0 s gr 
% Polyline
n 10725 2100 m
 12750 2100 l gs col0 s gr 
% Polyline
n 10725 2325 m
 12750 2325 l gs col0 s gr 
% Polyline
n 10725 2550 m
 12750 2550 l gs col0 s gr 
% Polyline
n 10725 2775 m
 12750 2775 l gs col0 s gr 
% Polyline
n 10725 3000 m
 12750 3000 l gs col0 s gr 
% Polyline
n 10725 3225 m
 12750 3225 l gs col0 s gr 
% Polyline
n 10725 3975 m
 12750 3975 l gs col0 s gr 
% Polyline
n 10725 6975 m
 12750 6975 l gs col0 s gr 
% Polyline
n 5100 -225 m 7950 -225 l 7950 900 l 5100 900 l
 cp gs col0 s gr 
% Polyline
n 1650 -75 m 4500 -75 l 4500 1050 l 1650 1050 l
 cp gs col0 s gr 
% Polyline
gs  clippath
8245 1458 m 8279 1409 l 8154 1322 l 8236 1416 l 8120 1371 l cp
eoclip
n 7500 900 m
 8250 1425 l gs col0 s gr gr

% arrowhead
n 8120 1371 m 8236 1416 l 8154 1322 l  col0 s
% Polyline
n 6405 7050 m 6300 7050 6300 8220 105 arcto 4 {pop} repeat
  6300 8325 8670 8325 105 arcto 4 {pop} repeat
  8775 8325 8775 7155 105 arcto 4 {pop} repeat
  8775 7050 6405 7050 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
8894 7036 m 8932 7082 l 9049 6985 l 8938 7039 l 9011 6939 l cp
eoclip
n 11100 5250 m
 8925 7050 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 9011 6939 m 8938 7039 l 9049 6985 l  col0 s
% Polyline
gs  clippath
8175 1608 m 8201 1554 l 8066 1487 l 8160 1568 l 8039 1541 l cp
eoclip
n 4425 975 m 7425 1200 l
 8175 1575 l gs col0 s gr gr

% arrowhead
n 8039 1541 m 8160 1568 l 8066 1487 l  col0 s
% Polyline
n 4500 1200 m 4950 1200 l 4950 3300 l 4500 3300 l
 cp gs col0 s gr 
% Polyline
n 2550 1200 m 3000 1200 l 3000 3150 l 2550 3150 l
 cp gs col0 s gr 
% Polyline
n 10725 6525 m
 12750 6525 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
1680 1746 m
gs 1 -1 sc (main.c) col0 sh gr
/Times-Roman ff 180.00 scf sf
1665 2166 m
gs 1 -1 sc (func1.c) col0 sh gr
/Times-Roman ff 180.00 scf sf
1650 2601 m
gs 1 -1 sc (func2.c) col0 sh gr
/Times-Roman ff 180.00 scf sf
3450 1800 m
gs 1 -1 sc (main.s) col0 sh gr
/Times-Roman ff 180.00 scf sf
3450 2175 m
gs 1 -1 sc (func1.s) col0 sh gr
/Times-Roman ff 180.00 scf sf
3450 2550 m
gs 1 -1 sc (func2.s) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 4125 m
gs 1 -1 sc (....) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 4350 m
gs 1 -1 sc (.....) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 4575 m
gs 1 -1 sc (INCL  i) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 4800 m
gs 1 -1 sc (.....) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 5025 m
gs 1 -1 sc (.....) col0 sh gr
/Times-Roman ff 180.00 scf sf
5475 1800 m
gs 1 -1 sc (main.o) col0 sh gr
/Times-Roman ff 180.00 scf sf
5475 2175 m
gs 1 -1 sc (func1.o) col0 sh gr
/Times-Roman ff 180.00 scf sf
5475 2550 m
gs 1 -1 sc (func2.o) col0 sh gr
/Times-Roman ff 180.00 scf sf
5325 4125 m
gs 1 -1 sc (0020      ....) col0 sh gr
/Times-Roman ff 180.00 scf sf
5325 4350 m
gs 1 -1 sc (0024      ....) col0 sh gr
/Times-Roman ff 180.00 scf sf
5325 4575 m
gs 1 -1 sc (0028     FF05 00000000) col0 sh gr
/Times-Roman ff 180.00 scf sf
975 3975 m
gs 1 -1 sc (extern int i;) col0 sh gr
/Times-Roman ff 180.00 scf sf
975 4425 m
gs 1 -1 sc (f1\(\)) col0 sh gr
/Times-Roman ff 180.00 scf sf
975 4650 m
gs 1 -1 sc ({) col0 sh gr
/Times-Roman ff 180.00 scf sf
975 4875 m
gs 1 -1 sc (   ...) col0 sh gr
/Times-Roman ff 180.00 scf sf
975 5100 m
gs 1 -1 sc (   i++;) col0 sh gr
/Times-Roman ff 180.00 scf sf
1500 5475 m
gs 1 -1 sc (C) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
5550 5400 m
gs 1 -1 sc (RELOCATIONS:) col0 sh gr
/Times-Roman ff 180.00 scf sf
5550 5625 m
gs 1 -1 sc (i    @002A  4 bytes) col0 sh gr
/Times-Roman ff 180.00 scf sf
8475 2325 m
gs 1 -1 sc (LINKER) col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 2250 m
gs 1 -1 sc (load_addr) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 2475 m
gs 1 -1 sc (exec_addr) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 2700 m
gs 1 -1 sc (text size) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 2925 m
gs 1 -1 sc (data size) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 3150 m
gs 1 -1 sc (bss size) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 8100 m
gs 1 -1 sc (.data initial values) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11775 5475 m
gs 1 -1 sc (.text image) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11700 1275 m
gs 1 -1 sc (a.out ) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11700 1500 m
gs 1 -1 sc (absolute executable file) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
5625 375 m
gs 1 -1 sc (standard C library libc) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 675 m
gs 1 -1 sc (math library libm) col0 sh gr
/Times-Roman ff 180.00 scf sf
6450 7275 m
gs 1 -1 sc (08048112    ....) col0 sh gr
/Times-Roman ff 180.00 scf sf
6450 7500 m
gs 1 -1 sc (08048116   ....) col0 sh gr
/Times-Roman ff 180.00 scf sf
6450 7725 m
gs 1 -1 sc (0804811A  FF05 0804D004) col0 sh gr
/Times-Roman ff 180.00 scf sf
3150 5475 m
gs 1 -1 sc (Assembly language) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
4950 6150 m
gs 1 -1 sc (Object file) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
4950 7275 m
gs 1 -1 sc (Absolute) col0 sh gr
/Times-Roman ff 180.00 scf sf
4950 7500 m
gs 1 -1 sc (Executable) col0 sh gr
/Times-Roman ff 180.00 scf sf
4950 7725 m
gs 1 -1 sc (Machine Code) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 1425 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 1650 m
gs 1 -1 sc (O) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 1875 m
gs 1 -1 sc (M) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 2100 m
gs 1 -1 sc (P) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 2325 m
gs 1 -1 sc (I) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 2550 m
gs 1 -1 sc (L) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 2775 m
gs 1 -1 sc (E) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 3000 m
gs 1 -1 sc (R) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 1425 m
gs 1 -1 sc (A) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 1650 m
gs 1 -1 sc (S) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 1875 m
gs 1 -1 sc (S) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 2100 m
gs 1 -1 sc (E) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 2325 m
gs 1 -1 sc (M) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 2550 m
gs 1 -1 sc (B) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 2775 m
gs 1 -1 sc (L) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 3000 m
gs 1 -1 sc (E) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 3225 m
gs 1 -1 sc (R) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF 3.921
(Therefore, compiling a C program into an e)33.336 529.014 R -.195(xe)
-.195 G 3.92(cutable \214le is a multi-stage process).195 F(in)33.336
544.014 Q -.26(vo)-.52 G(lving se).26 E -.195(ve)-.325 G(ral tools.).195
E(When one simply runs:)6.5 E/F2 10/Courier@0 SF(cc test.c)33.336
556.014 Q F1(The)33.336 571.014 Q/F3 13/Courier@0 SF(cc)4.048 E F1 .799
(command transparently e)4.049 F -.195(xe)-.195 G .799
(cutes the compiler).195 F 4.049(,a)-.52 G .799(ssembler and link)-4.049
F(er)-.13 E 4.049(,r)-.52 G .799(esulting in)-4.049 F .996(an e)33.336
586.014 R -.195(xe)-.195 G .996(cutable \214le called).195 F F3(a.out)
4.246 E F1 .996(\(if there are no f)4.246 F .996
(atal errors in compilation\).)-.13 F .995(The "a" in)7.495 F 1.224
("a.out" stands for "Absolute", meaning that all symbolic references ha)
33.336 601.014 R 1.615 -.195(ve b)-.26 H 1.225(een resolv).195 F(ed.)
-.195 E 1.713(It is possible to arrest the compiler wrapper at dif)
33.336 616.014 R 1.712(ferent stages, to see the assembly or)-.325 F
.891(object \214le that results, as we ha)33.336 631.014 R 1.281 -.195
(ve s)-.26 H .891(een in class.).195 F .891
(It is also of course possible to assign a)7.391 F(dif)33.336 646.014 Q
(ferent name to the)-.325 E F3(a.out)3.25 E F1(\214le.)3.25 E .912
(An a.out \214le contains pure machine code that can be directly e)
33.336 667.014 R -.195(xe)-.195 G .911(cuted by the processor).195 F(.)
-.715 E .192(The e)33.336 682.014 R -.195(xe)-.195 G .193
(cutable \214le \("a.out"\) contains e).195 F -.195(ve)-.325 G .193
(rything that the operating system needs to create).195 F 4.599(ap)
33.336 697.014 S(rogram')-4.599 E 4.599(si)-.715 G 1.349
(nitial memory con\214guration and be)-4.599 F 1.349(gin e)-.195 F -.195
(xe)-.195 G 4.599(cution. The).195 F 1.348(header of the a.out)4.599 F
2.729(identi\214es it to the operating system as an e)33.336 712.014 R
-.195(xe)-.195 G 2.729(cutable \214le and speci\214es the processor).195
F .09(architecture on which the machine code instructions will run.)
33.336 727.014 R 3.34(Ap)6.59 G .09(rogram compiled for an)-3.34 F 1.34
(x86 architecture can not be e)33.336 742.014 R -.195(xe)-.195 G 1.34
(cuted, for e).195 F 1.34(xample, on a SP)-.195 F 1.34(ARC processor)
-1.196 F 7.84(.T)-.715 G 1.34(he header)-7.84 F 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(6/pg 3)
2.25 E(\2512012 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF(also gi)33.336 120 Q -.195(ve)-.325 G 3.25(st).195 G
(he size of the te)-3.25 E(xt, data and bss memory requirements, as e)
-.195 E(xplained belo)-.195 E -.845(w.)-.325 G 0 0 468 493 -512.617 540
33.336 653.617 PBEGIN
%%BeginDocument: maps.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: maps.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Sep 20 01:32:12 2006
%%For: hak@lex ()
%%BoundingBox: 0 0 493 540
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 540 moveto 0 0 lineto 493 0 lineto 493 540 lineto closepath clip newpath
-70.0 577.3 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 5760 1200 m 9360 1200 l 9360 9600 l 5760 9600 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 384.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5760 1920 m 9360 1920 l 9360 2880 l 5760 2880 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 3840 m 9360 3840 l 9360 4680 l 5760 4680 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 4680 m 9360 4680 l 9360 5400 l 5760 5400 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 5400 m 9360 5400 l 9360 6600 l 5760 6600 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 7800 m 9360 7800 l 9360 9120 l 5760 9120 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
30.000 slw
gs  clippath
7530 6945 m 7350 6945 l 7350 7277 l 7440 7007 l 7530 7277 l cp
eoclip
n 7440 7800 m
 7440 6960 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 7530 7277 m 7440 7007 l 7350 7277 l 7440 7367 l 7530 7277 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7830 7215 m 8010 7215 l 8010 6883 l 7920 7153 l 7830 6883 l cp
eoclip
n 7920 6600 m
 7920 7200 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 7830 6883 m 7920 7153 l 8010 6883 l 7920 6793 l 7830 6883 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1200 1200 m 3600 1200 l 3600 5760 l 1200 5760 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 80.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 4440 m 3600 4440 l 3600 5520 l 1200 5520 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 3000 m 3600 3000 l 3600 4200 l 1200 4200 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 1200 m 3600 1200 l 3600 2520 l 1200 2520 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
6166 2478 m 6101 2310 l 5691 2471 l 6060 2424 l 5757 2638 l cp
eoclip
n 3360 3480 m
 6120 2400 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 5757 2638 m 6060 2424 l 5691 2471 l 5757 2638 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6156 4283 m 6112 4109 l 5685 4216 l 6057 4216 l 5729 4390 l cp
eoclip
n 3240 4920 m
 6120 4200 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 5729 4390 m 6057 4216 l 5685 4216 l 5729 4390 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman-iso ff 240.00 scf sf
7320 2520 m
gs 1 -1 sc (text) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7320 4320 m
gs 1 -1 sc (data) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7320 5160 m
gs 1 -1 sc (bss) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7320 6120 m
gs 1 -1 sc (heap) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7320 8520 m
gs 1 -1 sc (stack) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
5640 1200 m
gs 1 -1 sc (00000000) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
5640 9600 m
gs 1 -1 sc (FFFFFFFF) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
7320 840 m
gs 1 -1 sc (Run-Time Memory Image) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
2280 3600 m
gs 1 -1 sc (.text) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
2280 5040 m
gs 1 -1 sc (.data) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
1440 1800 m
gs 1 -1 sc (load_addr,exec_addr,) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
1440 2085 m
gs 1 -1 sc (text_sz,data_sz,) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
1440 2370 m
gs 1 -1 sc (bss_sz) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
2280 1560 m
gs 1 -1 sc (header:) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
2640 840 m
gs 1 -1 sc (a.out file) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
%%EndDocument
end PEND 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(6/pg 4)
2.25 E(\2512012 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF(The)33.336 120 Q/F2 13/Times-Bold@0 SF(bss)3.711 E F1
.461(section contains all un-initialized global v)3.711 F 3.711
(ariables. The)-.325 F 3.711(Cl)3.711 G .46(anguage speci\214cation)
-3.711 F 2.333(states that all such v)33.336 135 R 2.333
(ariables, lacking an e)-.325 F 2.333(xplicit initializer)-.195 F 5.583
(,m)-.52 G 2.333(ust be initialized by the)-5.583 F
(operating system or C run-time en)33.336 150 Q(vironment to 0.)-.52 E
/F3 10/Courier@0 SF(int j=2;)33.336 162 Q(int k;)33.336 174 Q(main\(\))
33.336 186 Q({)33.336 198 Q(int l;)39.336 210 Q(/*...*/)90.936 222 Q(})
33.336 234 Q F1 .875(In the e)33.336 249 R .875(xample abo)-.195 F -.195
(ve)-.195 G(,).195 E/F4 13/Courier@0 SF(j)4.125 E F1 .874(has an e)4.124
F .874(xplicit initializer)-.195 F 4.124(,a)-.52 G .874
(nd will be in the data se)-4.124 F 4.124(gment. The)-.195 F -.325(va)
33.336 264 S 1.093(lue of the initializer will be found in the .data se\
ction of the a.out.).325 F F4(k)7.593 E F1 1.093(is uninitialized.)4.343
F .529(Therefore it will reside in the bss se)33.336 279 R .528
(gment of memory and will ha)-.195 F .918 -.195(ve a)-.26 H 3.778(ni)
.195 G .528(nitial v)-3.778 F .528(alue of 0.)-.325 F 3.67(The ISO C st\
andard says that "If an object that has static storage duration is not)
33.336 294 R 2.027(initialized e)33.336 309 R(xplicitly)-.195 E 5.277
(,i)-.845 G 5.277(ti)-5.277 G 5.277(si)-5.277 G 2.027
(nitialized impliclitly as if e)-5.277 F -.195(ve)-.325 G 2.027
(ry member that has arithmetic).195 F 1.953(type were assigned 0 and e)
33.336 324 R -.195(ve)-.325 G 1.954
(ry member that has pointer type were assigned a NULL).195 F 1.136
(pointer constant".)33.336 339 R 1.136
(This is satis\214ed by \214lling e)7.636 F -.195(ve)-.325 G 1.136
(ry byte of the bss re).195 F 1.136(gion with 0, and is)-.195 F 2.243
(performed by the operating system.)33.336 354 R 2.244(The v)8.743 F
(ariable)-.325 E F4(l)5.494 E F1 2.244(has automatic storage scope, and)
5.494 F .009(therefore will be found on the stack \(or)33.336 369 R
3.258(,i)-.52 G 3.258(ft)-3.258 G .008(he compiler is set for hea)-3.258
F .008(vy optimization and a)-.26 F 3.208(pointer to)33.336 384 R F4(l)
6.458 E F1 3.208(is ne)6.458 F -.195(ve)-.325 G 6.458(rt).195 G(ak)
-6.458 E 3.208(en, it may li)-.13 F 3.598 -.195(ve i)-.325 H 6.459(nar)
.195 G -.195(eg)-6.459 G 6.459(ister\). Automatic).195 F -.325(va)6.459
G 3.209(riables are not).325 F(0-initialized.)33.336 399 Q F2 1.751
(Dynamic Memory)33.336 429 R F1 1.751
(is memory which is allocated from the operating system while the)5.001
F .1(program is running, rather than at program load time.)33.336 444 R
.101(Dynamic memory is not part of the)6.601 F 4.892(Cl)33.336 459 S
1.642(anguage, b)-4.892 F 1.642(ut rather part of the run-time library)
-.26 F 4.892(,a)-.845 G 1.641(nd is allocated using the)-4.892 F F4
(malloc)4.891 E F1 .167(function, which in turn mak)33.336 474 R .167
(es an operating system call.)-.13 F .167
(As such, dynamic memory is not)6.667 F 3.664
(the concern of the C compiler writer)33.336 489 R 10.164(.I)-.715 G
6.914(nm)-10.164 G(an)-6.914 E 6.914(yo)-.195 G 3.663
(ther languages, dynamic memory)-6.914 F
(allocation is speci\214ed as part of the core language.)33.336 504 Q F2
(Link)223.155 534 Q(er Symbols)-.13 E F1 3.941(The link)33.336 570 R
3.941(er is independent of an)-.13 F 7.191(yp)-.195 G 3.941
(articular high-le)-7.191 F -.195(ve)-.325 G 7.191(ll).195 G 7.191
(anguage. It)-7.191 F -.13(ke)7.191 G 3.942(eps track of).13 F .258
(symbols, which are similar to identi\214ers in C, b)33.336 585 R .257
(ut their type is v)-.26 F .257(ery lo)-.195 F(w-le)-.325 E -.195(ve)
-.325 G 3.507(lo).195 G 3.507(riented. A)-3.507 F .437
(symbol has a name \(namespace limitations v)33.336 600 R .437
(ary widely by system, b)-.325 F .437(ut all UNIX systems)-.26 F(allo)
33.336 615 Q 5.06(wa)-.325 G 5.06(tl)-5.06 G 1.809(east 32 characters f\
rom a set at least as broad as C identi\214ers\), a type \( e.g.)-5.06 F
.884(absolute or relati)33.336 630 R -.195(ve)-.325 G 4.134(,a).195 G
4.134(sd)-4.134 G .884(iscussed belo)-4.134 F .884
(w\), a section \(data, te)-.325 F .884
(xt, etc.\), a size \(e.g. 32 or 64)-.195 F 2.093(bits\), and a v)33.336
645 R 2.093(alue \(the v)-.325 F 2.093
(alue may be unde\214ned at certain points along the w)-.325 F(ay)-.13 E
5.343(,e)-.845 G 2.093(.g. a)-5.343 F(reference to an e)33.336 660 Q
(xternal function in a)-.195 E F4(.o)3.25 E F1(\214le\).)3.25 E 1.721
(Here are some things in the C language that ne)33.336 681 R -.195(ve)
-.325 G 4.972(ra).195 G 1.722(ppear in an object \214le \(e)-4.972 F
1.722(xcept for)-.195 F(deb)33.336 696 Q
(ugging purposes\) and do not concern the link)-.26 E(er:)-.13 E 3.388
(\203Cl)33.336 711 S .138(anguage type speci\214ers \(such as "p is a p\
ointer to a pointer to a function returning int)-3.388 F(and taking tw)
33.336 726 Q 3.25(oi)-.13 G(nt ar)-3.25 E(guments"\))-.234 E 3.25
(\203Cl)33.336 741 S
(anguage structure, union and enum de\214nitions and typedef names.)
-3.25 E 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(6/pg 5)
2.25 E(\2512012 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF<83>33.336 120 Q/F2 13/Courier@0 SF(goto)3.25 E F1
(labels)3.25 E 4.735<8349>33.336 135 S 1.486(nternal labels that may be\
 generated by the compiler for loops, switch statements, if)-4.735 F
1.958(statements, etc.)33.336 150 R 1.958
(These labels will appear in the assembly language, b)8.458 F 1.958
(ut the)-.26 F 5.208(ya)-.195 G 1.958(re local)-5.208 F
(symbols and will not be visible to the link)33.336 165 Q(er)-.13 E(.)
-.715 E 4.222<8361>33.336 180 S .972(utomatic \(local\) v)-4.222 F 4.222
(ariables. An)-.325 F .972(important e)4.222 F .972
(xception is a local v)-.195 F .972(ariable that is declared)-.325 F
.516(with the)33.336 195 R F2(static)3.766 E F1 .516(storage class.)
3.766 F .516(This v)7.016 F .515
(ariable has local scope, i.e. its name is not visible)-.325 F 3.667
(outside of the curly-braced block in which it is declared, b)33.336 210
R 3.667(ut it li)-.26 F -.195(ve)-.325 G 6.917(si).195 G 6.917(nt)-6.917
G 3.667(he same)-6.917 F(neighborhood as global v)33.336 225 Q
(ariables.)-.325 E 0 0 148 148 -310 310 193.336 571 PBEGIN
%%BeginDocument: obj.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: obj.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Sep 20 02:01:42 2006
%%For: hak@lex ()
%%BoundingBox: 0 0 148 310
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 310 moveto 0 0 lineto 148 0 lineto 148 310 lineto closepath clip newpath
-70.0 347.6 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
30.000 slw
n 1200 1200 m 3600 1200 l 3600 5760 l 1200 5760 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 80.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 1200 m 3600 1200 l 3600 1920 l 1200 1920 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 1920 m 3600 1920 l 3600 3120 l 1200 3120 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 3120 m 3600 3120 l 3600 4200 l 1200 4200 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 4200 m 3600 4200 l 3600 5040 l 1200 5040 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 5040 m 3600 5040 l 3600 5760 l 1200 5760 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
/Times-Roman ff 240.00 scf sf
2280 1560 m
gs 1 -1 sc (header) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 240.00 scf sf
2280 2520 m
gs 1 -1 sc (.text) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 240.00 scf sf
2280 3600 m
gs 1 -1 sc (.data) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 240.00 scf sf
2280 4680 m
gs 1 -1 sc (relocations table) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 240.00 scf sf
2280 5400 m
gs 1 -1 sc (symbol table) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 270.00 scf sf
2520 840 m
gs 1 -1 sc (Object File) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
%%EndDocument
end PEND/F3 13/Times-Bold@0 SF(What')225.684 592 Q 3.25(si)-.481 G 3.25
(na.)-3.25 G(o?)-3.25 E F1(Let')33.336 622 Q 3.25(ss)-.715 G
(ee what is actually in an object \214le and ho)-3.25 E 3.25(wi)-.325 G
3.25(tg)-3.25 G(ets there:)-3.25 E/F4 10/Courier@0 SF(/* f1.c */)33.336
634 Q(extern int i;)33.336 646 Q(f\(\))33.336 670 Q({)33.336 682 Q(i=2;)
90.936 694 Q(})33.336 706 Q(/* f2.c */)33.336 730 Q(int i;)33.336 742 Q
0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(6/pg 6)
2.25 E(\2512012 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 10
/Courier@0 SF(main\(\))33.336 117 Q({)33.336 129 Q(i=1;)90.936 141 Q
(f\(\);)90.936 153 Q(})33.336 165 Q/F2 13/Times-Roman@0 SF(In)33.336 180
Q/F3 13/Courier@0 SF(f1.c)4.309 E F2 4.309(,t)C(he)-4.309 E F3(extern)
4.309 E F2 1.058(storage class for v)4.308 F(ariable)-.325 E/F4 13
/Times-Italic@0 SF(i)4.308 E F2 1.058(tells the compiler that this v)
4.308 F 1.058(ariable is)-.325 F -.195(ex)33.336 195 S .147
(ternal to that).195 F F3(.c)3.398 E F2 3.398(\214le. Therefore,)3.398 F
.148(the compiler does not complain when it does not see a)3.398 F 2.2
(declaration that v)33.336 210 R 5.45(ariable. Instead,)-.325 F 2.2
(it kno)5.45 F 2.2(ws that)-.325 F F3(i)5.45 E F2 2.2(is a global v)5.45
F 2.199(ariable, and should be)-.325 F .789
(accessed by using an absolute addressing mode.)33.336 225 R .79
(Neither the compiler nor the assembler)7.29 F(kno)33.336 240 Q 1.16
(ws what that actual address will be.)-.325 F 1.159
(That is not decided until the link)7.66 F 1.159(er puts all the)-.13 F
2.041(object \214les together and assigns addresses to symbols.)33.336
255 R 2.041(Therefore, the assembler must)8.541 F(lea)33.336 270 Q .627
-.195(ve a ")-.26 H .237(place-holder" in the object \214le.).195 F(Lik)
6.737 E -.325(ew)-.13 G .236
(ise, in f2.o, there will be a reference to the).325 F(symbol)33.336 285
Q F3(f)3.25 E F2(.)A .669
(In assembly language, each instruction is represented by a line ha)
33.336 315 R .67(ving 4 \214elds which are)-.26 F .503
(delimited by whitespace.)33.336 330 R .503
(The \214rst \214eld is an optional label, which associates a symbolic)
7.003 F 1.065(name with the address of the instruction.)33.336 345 R
1.065(The label may also appear on a line by itself.)7.565 F 1.69
(In either form, the label must ha)33.336 360 R 2.079 -.195(ve a c)-.26
H 1.689(olon follo).195 F 1.689(wing it.)-.325 F 1.689(The ne)8.189 F
1.689(xt \214eld is the opcode,)-.195 F(follo)33.336 375 Q 1.894
(wed by the operands \214eld.)-.325 F 1.894
(After the operands, a comment can be placed, started)8.394 F
(with a # character)33.336 390 Q 6.5(.T)-.715 G
(his comment is ignored by the assembler)-6.5 E(.)-.715 E .361(Some opc\
odes are not real machine language opcodes that the processor understan\
ds, b)33.336 420 R(ut)-.26 E 3.816(pseudo-opcodes, or directi)33.336 435
R -.195(ve)-.325 G 3.817(s, that are recognized by the assembler).195 F
10.317(.S)-.715 G 3.817(uch pseudo-)-10.317 F(opcodes be)33.336 450 Q
(gin with a dot.)-.195 E 1.802(Let us e)33.336 480 R 1.801
(xamine the assembly language \214les produced by the C code abo)-.195 F
2.191 -.195(ve \()-.195 H 1.801(using gcc).195 F
(under Linux on an x86 system\).)33.336 495 Q F1(**** f1.s)39.336 507 Q
136.8(.text #Place)90.936 519 R(output into .text section)6 E(.globl f)
90.936 531 Q(#f is a globally visible symbol)67.2 E 18
(.type f,@function)87.336 543 R 6(#a)56.4 G
(nd represents a function addr)-6 E(f:)39.336 555 Q(pushl %ebp)87.336
567 Q(#These instructions set up)58.8 E(movl %esp,%ebp)87.336 579 Q
(#the stack frame pointer)92.4 E(movl $2,i)87.336 591 Q 140.4
(leave #Restore)87.336 603 R(frame pointer)6 E(ret)87.336 615 Q 18
(.size f,.-f)87.336 627 R(#Calculate the size of function f)92.4 E
(**** f2.s)39.336 651 Q(.text)90.936 663 Q(.globl main)90.936 675 Q 18
(.type main,@function)87.336 687 R(main:)39.336 699 Q(pushl %ebp)87.336
711 Q(#These instructions set up)58.8 E(movl %esp,%ebp)87.336 723 Q
(#the stack frame pointer)92.4 E(movl $1,i)90.936 735 Q 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(6/pg 7)
2.25 E(\2512012 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 10
/Courier@0 SF(call f)87.336 117 Q 140.4(leave #Restore)87.336 129 R
(frame pointer)6 E(ret)87.336 141 Q 18(.size main,.-main)87.336 153 R 12
(.comm i,4,4)87.336 165 R(#i is common block sym, 4 bytes long, align 4)
98.4 E/F2 13/Times-Roman@0 SF .504(The assembler directi)33.336 210 R
-.195(ve)-.325 G/F3 13/Courier@0 SF(.text)3.949 E F2 .504
(tells the assembler that it is assembling opcodes to go in)3.754 F
1.898(the .te)33.336 225 R 1.897(xt section of the object \214le.)-.195
F(The)8.397 E F3(.globl)5.147 E F2(directi)5.147 E 2.287 -.195(ve w)
-.325 H 1.897(ill cause the assembler to).195 F -.195(ex)33.336 240 S
3.379(port the associated symbol as a de\214ning instance.).195 F F3
(.type)9.879 E F2 3.379(is used to pass along)6.629 F 2.484
(information into the object \214le as to the type of the symbol.)33.336
255 R 2.483(Please note that it has)8.984 F .554
(nothing to do with the C language notion of type.)33.336 270 R .555
(Symbol types may either be functions)7.055 F 2.485(or v)33.336 285 R
5.735(ariables. The)-.325 F(link)5.735 E 2.485
(er is able to catch gross errors such as if)-.13 F F3(f)5.734 E F2
2.484(were de\214ned as a)5.734 F -.325(va)33.336 300 S 1.526(riable in)
.325 F F3(f1.c)4.776 E F2 1.526(instead of a function. The)4.776 F F3
(.size)4.777 E F2(directi)4.777 E 1.917 -.195(ve c)-.325 H 1.527
(alculates the size of the).195 F 1.556(function by subtracting the v)
33.336 315 R 1.556
(alue of the symbol representing the \214rst instruction of the)-.325 F
3.18(function \(e.g.)33.336 330 R F3(main)6.43 E F2 6.43(\)f)C 3.18
(rom the special assembler symbol . \(period character\), which)-6.43 F
1.664(represents the current byte output position.)33.336 345 R 1.664
(Note that the CALL to function)8.164 F F3(f)4.914 E F2 1.664(is done)
4.914 F(symbolically)33.336 360 Q 3.25(,a)-.845 G 3.25(si)-3.25 G 3.25
(st)-3.25 G(he assignment into global v)-3.25 E(ariable)-.325 E F3(i)
3.25 E F2(.)A .367(Note the)33.336 381 R F3(.comm)3.617 E F2 .367
(assembler pseudo-opcode.)3.617 F .367
(It creates a de\214ning instance of the symbol)6.867 F/F4 13
/Times-Italic@0 SF(i)3.617 E F2 2.371(in the e)33.336 396 R 2.371
(xample abo)-.195 F -.195(ve)-.195 G 5.621(,s).195 G 2.37
(pecifying its size and alignment restriction in bytes.)-5.621 F
(Another)8.87 E 1.265(name for the)33.336 411 R F3(bss)4.515 E F2 1.265
(section is the)4.515 F F3 1.265(common block)4.515 F F2 7.765(.B)C
1.266(ecause there is no initializer)-7.765 F 4.516(,i)-.52 G 4.516(ti)
-4.516 G(s)-4.516 E .71
(not an error for multiple de\214ning instances of the v)33.336 426 R
(ariable)-.325 E F3(i)3.96 E F2 .709(to appear during linking, as)3.96 F
3.249(long as the)33.336 441 R 6.499(ya)-.195 G 3.249
(re all uninitialized and ha)-6.499 F 3.639 -.195(ve t)-.26 H 3.249
(he same size and alignment.).195 F 3.25(It is also)9.749 F .723
(acceptable for there to be at most one initialized symbol \(D)33.336
456 R -1.573 -1.443(AT A)-.52 H 3.973(\)w)1.443 G .722
(ith the same name as)-3.973 F 1.35(one or more COMMON symbols.)33.336
471 R 1.35(The term COMMON BLOCK is v)7.85 F 1.35(ery old, dating to)
-.195 F(the FOR)33.336 486 Q(TRAN days.)-.78 E .939
(The resulting object \214le is similar to an a.out \214le, ho)33.336
507 R(we)-.325 E -.195(ve)-.325 G 4.188(ra).195 G .938
(ll addresses are relati)-4.188 F -.195(ve)-.325 G 7.438(.I).195 G(n)
-7.438 E 2.095(addition, the object \214le will ha)33.336 522 R 2.486
-.195(ve a s)-.26 H 2.096(ection kno).195 F 2.096(wn as the)-.325 F/F5
13/Times-Bold@0 SF 2.096(symbol table)5.346 F F2 2.096(containing an)
5.346 F .572(entry for e)33.336 537 R -.195(ve)-.325 G .571(ry symbol t\
hat is either de\214ned or referenced in the \214le, and another sectio\
n).195 F(called the)33.336 552 Q F5 -.234(re)3.25 G(locations table).234
E F2 3.25(,d)C(escribed belo)-3.25 E -.845(w.)-.325 G(No)33.336 573 Q
2.67 -.845(w, l)-.325 H .98(et us vie).845 F 4.23(wt)-.325 G .98(he .te)
-4.23 F .98(xt section of)-.195 F F3(f1.o)4.23 E F2 .98
(\(the listing belo)4.23 F 4.23(ww)-.325 G .981
(as re-formatted from the)-4.36 F(output of objdump -d\):)33.336 588 Q
F1(Offset Opcodes)33.336 600 Q(Disassembly)142.8 E 12(0000 55)33.336 612
R(pushl %ebp)144 E 12(0001 89E5)33.336 624 R(movl %esp,%ebp)132 E 12
(0003 C7050000000002000000)33.336 636 R(movl $2,0)36 E 12(000D C9)33.336
648 R(leave)144 E 12(000E C3)33.336 660 R(ret)144 E F2 1.226
(First, note that the of)33.336 690 R 1.226
(fset of the \214rst instruction is 0.)-.325 F(Ob)7.726 E(viously)-.195
E 4.476(,t)-.845 G 1.225(his can not be a v)-4.476 F(alid)-.325 E .431
(memory address.)33.336 705 R .431(All of)6.931 F .431
(fsets in object \214les are relati)-.325 F .821 -.195(ve t)-.325 H
3.682(ot).195 G .432(he object \214le.)-3.682 F .432(It isn')6.932 F
3.682(tu)-.234 G .432(ntil the)-3.682 F(link)33.336 720 Q
(er kicks in that symbols g)-.13 E(ain absolute, usable addresses.)-.065
E 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(6/pg 8)
2.25 E(\2512012 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF(Ne)33.336 120 Q 2.098
(xt note that in the instruction be)-.195 F 2.097(ginning at of)-.195 F
2.097(fset 0003, the constant 2 is mo)-.325 F -.195(ve)-.195 G 5.347(dt)
.195 G(o)-5.347 E 2.908(memory address 0.)33.336 135 R 4.988 -1.04(We k)
9.408 H(no)1.04 E 6.158(wf)-.325 G 2.908(rom e)-6.158 F 2.908
(xamining the corresponding assembly language)-.195 F .159
(input \214le that this is the instruction that mo)33.336 150 R -.195
(ve)-.195 G 3.408(s2i).195 G .158(nto v)-3.408 F(ariable)-.325 E/F2 13
/Courier@0 SF(i)3.408 E F1 6.658(.T)C .158(he assembler has left a)
-6.658 F .627
(place-holder of 00000000 in the object \214le where the link)33.336 165
R .627(er will ha)-.13 F 1.017 -.195(ve t)-.26 H 3.878<6f8c>.195 G .628
(ll in the actual)-3.878 F 2.719(32-bit address of symbol)33.336 180 R
F2(i)5.969 E F1 2.719(once that is kno)5.969 F 5.969(wn. C705)-.325 F
2.719(is the x86 machine language)5.969 F 1.505(opcode for the MO)33.336
195 R 1.506
(VL instruction where the source addressing mode is Immediate and)-.65 F
1.411(the destination mode is Absolute.)33.336 210 R 1.411(The ne)7.911
F 1.41(xt 4 bytes are the destination address and the)-.195 F 1.143(\
\214nal 4 bytes of the instruction are the source operand \(which is in\
 Intel-style, or "little-)33.336 225 R(endian" byte order\).)33.336 240
Q(Here is the dump of f2.o:)33.336 270 Q/F3 10/Courier@0 SF
(Offset Opcodes)33.336 282 Q(Disassembly)146.4 E 12(0000 55)33.336 294 R
(pushl %ebp)138 E 12(0001 89E5)33.336 306 R(movl %esp,%ebp)126 E 12
(0003 C7050000000001000000)33.336 318 R(movl $1,0)30 E 12
(000D E8FCFFFFFF)33.336 330 R(call 000E)90 E 12(0012 C9)33.336 342 R
(leave)138 E 12(0013 C3)33.336 354 R(ret)138 E F1 1.796
(Note that the placeholder in the CALL instruction is FFFFFFFC, b)33.336
384 R 1.796(ut the disassembler)-.26 F 2.032(decodes that as 000E.)
33.336 399 R 2.032
(This is because the CALL instruction uses a Program Counter)8.532 F
(Relati)33.336 414 Q 1.659 -.195(ve a)-.325 H 1.269(ddressing mode.).195
F 1.269(The address to which e)7.769 F -.195(xe)-.195 G 1.269
(cution jumps is the operand in the).195 F .776
(instruction added to the v)33.336 429 R .776
(alue of the Program Counter re)-.325 F(gister)-.195 E/F4 13
/Times-Italic@0 SF(corr)4.026 E .776(esponding to the byte)-.481 F(be)
33.336 444 Q 1.842(yond the last byte of the CALL instruction)-.39 F F1
8.342(.I)C 5.092(nt)-8.342 G -.13(wo)-5.092 G 3.272 -.715('s c).13 H
1.842(omplement, FFFFFFFC is -4,).715 F .59
(therefore the CALL appears to be to the instruction at of)33.336 459 R
.59(fset 000E.)-.325 F .59(Of course, all of this)7.09 F 3.47
(is meaningless since it is just a placeholder that will be o)33.336 474
R -.195(ve)-.195 G 3.47(rwritten by the link).195 F(er)-.13 E(.)-.715 E
1.768(Nonetheless, it reminds us that there are dif)33.336 489 R(ferent)
-.325 E/F5 13/Times-Bold@0 SF 1.768(Relocation T)5.018 F(ypes)-.962 E F1
1.768(depending on the)5.018 F(addressing mode being used.)33.336 504 Q
(The symbol and relocation tables for the tw)33.336 534 Q 3.25(oo)-.13 G
(bject \214les will look something lik)-3.25 E 3.25(et)-.13 G(his:)-3.25
E F3 24(f1.o: file)33.336 546 R(format elf32-i386)6 E
(RELOCATION RECORDS FOR [.text]:)33.336 570 Q 12(OFFSET TYPE)33.336 582
R(VALUE)84 E(00000005 R_386_32)33.336 594 Q(i)60 E 24(f2.o: file)33.336
630 R(format elf32-i386)6 E(RELOCATION RECORDS FOR [.text]:)33.336 654 Q
12(OFFSET TYPE)33.336 666 R(VALUE)84 E(00000012 R_386_32)33.336 678 Q(i)
60 E(0000001b R_386_PC32)33.336 690 Q(f)48 E F5(Addr)215.271 720 Q
(ess Constants)-.234 E 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(6/pg 9)
2.25 E(\2512012 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF .095(It is possible to create a compile-time constant\
 which is the address of a link)33.336 120 R .095(er symbol +/-)-.13 F
(an inte)33.336 135 Q(ger)-.195 E 6.5(.T)-.715 G(his is e)-6.5 E
(xplicitly permitted in the C standard, e.g.)-.195 E/F2 10/Courier@0 SF
(extern int a[];)33.336 147 Q(f\(\))33.336 171 Q({)33.336 183 Q
(int *p= &a[2];)33.336 195 Q(})33.336 207 Q(Assembly Language:)33.336
231 Q(f:)33.336 243 Q 12(pushl %ebp)81.336 255 R 18(movl %esp,)81.336
267 R(%ebp)6 E 18(subl $4,)81.336 279 R(%esp)6 E 18(movl $a+8,)81.336
291 R(-4\(%ebp\))6 E(leave)81.336 303 Q(ret)81.336 315 Q(Disassembly:)
33.336 339 Q(00000000 <f>:)33.336 351 Q 12(0: 55)51.336 363 R 12
(push %ebp)132 F 12(1: 89)51.336 375 R 108(e5 mov)6 F(%esp,%ebp)24 E 12
(3: 83)51.336 387 R(ec 04)6 E 18(sub $0x4,%esp)96 F 12(6: c7)51.336 399
R(45 fc 08 00 00 00)6 E 12(movl $0x8,0xfffffffc\(%ebp\))24 F 12(d: c9)
51.336 411 R(leave)132 E 12(e: c3)51.336 423 R(ret)132 E F1(Wh)33.336
438 Q 3.675(yd)-.065 G .425(oes this w)-3.675 F 3.675(ork? At)-.13 F
.426(compile time, the identi\214er)3.676 F/F3 13/Courier@0 SF(a)3.676 E
F1 .426(is equi)3.676 F -.325(va)-.325 G .426
(lent to the address of the).325 F(be)33.336 453 Q 1.8
(ginning of the array)-.195 F 8.3(.T)-.845 G 1.8
(herefore, the address of)-8.3 F F3(a[2])5.05 E F1 1.799
(is 8 bytes more.)5.049 F 1.799(Because the)8.299 F .985
(absolute address of a is not kno)33.336 468 R .985(wn by the compiler)
-.325 F 4.236(,i)-.52 G 4.236(tm)-4.236 G .986(ust e)-4.236 F .986
(xpress this symbolically to)-.195 F .469(the assembler as)33.336 483 R
F3($a+8)3.719 E F1 6.969(.T)C .469
(he object \214le created by the assembler has the usual "hole" for)
-6.969 F .954(the unkno)33.336 498 R .954(wn v)-.325 F .954(alue, b)
-.325 F .954(ut instead of being \214lled with a 0, it has the v)-.26 F
.954(alue of 8.)-.325 F .955(When the)7.454 F(link)33.336 513 Q 2.018(e\
r assigns the address of the symbol a and \214lls in the relocations, i\
t will add that)-.13 F
(number 8 to the symbol to create the proper address.)33.336 528 Q/F4 13
/Times-Bold@0 SF(Initialized data)225.261 558 Q F1 .614(When global v)
33.336 594 R .614(ariables \(including local static v)-.325 F .615
(ariables\) ha)-.325 F 1.005 -.195(ve a)-.26 H 3.865(ni).195 G
(nitializer)-3.865 E 3.865(,t)-.52 G .615(hat initializer)-3.865 F -.325
(va)33.336 609 S 1.189(lue must wind up in the D).325 F -1.573 -1.443
(AT A)-.52 H 1.188(section of the e)5.881 F -.195(xe)-.195 G 1.188
(cutable so it can be loaded with the).195 F 6.754(program. Unlik)33.336
624 R 6.754(ea)-.13 G 3.504(utomatic v)-6.754 F 3.504
(ariables, these initializers only tak)-.325 F 6.754(ee)-.13 G -.325(ff)
-6.754 G 3.504(ect prior to the).325 F .905(program start and their v)
33.336 639 R .904
(alue must be computable at compile time, at least in terms of a)-.325 F
(link)33.336 654 Q(er symbol +/- an optional of)-.13 E(fset.)-.325 E F2
(int i=3;)33.336 666 Q(Assembly:)33.336 690 Q 88.8(.data #Place)81.336
714 R(bytes into the .data section now)6 E(.align 4)81.336 726 Q
(#Align the next output byte on a 4-byte boundary)19.2 E 12
(.type i,@object)81.336 738 R(#Declare i to be a variable)22.8 E 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 10)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF 12(.size i,4)81.336 117 R(#Set size of i)58.8 E(i:)
33.336 129 Q 12(.long 3)81.336 141 R(#Output 4 bytes)70.8 E/F2 13
/Times-Roman@0 SF(The)33.336 156 Q/F3 13/Courier@0 SF(.globl)4.517 E F2
(directi)4.517 E 1.657 -.195(ve i)-.325 H 1.267(nstructs the link).195 F
1.267(er to mak)-.13 F 4.517(et)-.13 G 1.267
(he symbol i globally visible during)-4.517 F 1.477
(the linkage process.)33.336 171 R(The)7.977 E F3(.data)4.727 E F2
(directi)4.727 E 1.867 -.195(ve s)-.325 H 1.476
(witches the assembly tar).195 F 1.476(get into the D)-.234 F -1.573
-1.443(AT A)-.52 H 1.665(section of the output \(object\) \214le.)33.336
186 R F3(.type)8.165 E F2 1.665
(declares i to be a symbol associated with a)4.915 F -.325(va)33.336 201
S 1.532(riable, not a function.).325 F F3(align)8.032 E F2 1.532
(causes the ne)4.782 F 1.531(xt output byte to be aligned on a 4-byte)
-.195 F(boundary)33.336 216 Q 5.642(,p)-.845 G 2.392
(ossibly skipping bytes \(inserting padding\) to do so.)-5.642 F
(Finally)8.892 E 5.642(,t)-.845 G 2.392(he label)-5.642 F F3(i:)5.642 E
F2 .71(associates the ne)33.336 231 R .71(xt directi)-.195 F 1.1 -.195
(ve w)-.325 H .71(ith the symbol i.).195 F .709(That directi)7.209 F
-.195(ve)-.325 G F3(.long)4.154 E F2 .709(emits 4 bytes into)3.959 F
.737(the current section \(D)33.336 246 R -1.573 -1.443(AT A)-.52 H
3.988(\). There)1.443 F .738(are similar directi)3.988 F -.195(ve)-.325
G 3.988(sf).195 G .738(or de\214ning initializers of other)-3.988 F .9
(simple data types.)33.336 261 R .9
(Complicated initializers, e.g. for structs or arrays, are b)7.4 F .899
(uilt up with a)-.26 F(succession of these simple directi)33.336 276 Q
-.195(ve)-.325 G(s.).195 E(Local static v)33.336 306 Q
(ariables require special treatment:)-.325 E F1(f\(\))33.336 318 Q({)
33.336 330 Q(static int a;)33.336 342 Q(a=1;)90.936 354 Q(})33.336 366 Q
(g\(\))33.336 390 Q({)33.336 402 Q(static int a;)33.336 414 Q(a=2;)
90.936 426 Q(})33.336 438 Q(Assembly:)33.336 462 Q(f:)33.336 474 Q 6
(.local a.0)81.336 486 R 12(.comm a.0,4,4)81.336 498 R(.text)90.936 510
Q 12(pushl %ebp)81.336 522 R 18(movl %esp,)81.336 534 R(%ebp)6 E 18
(movl $1,)81.336 546 R(a.0)6 E 18(popl %ebp)81.336 558 R(ret)81.336 570
Q 6(.local a.1)81.336 582 R 12(.comm a.1,4,4)81.336 594 R(.text)90.936
606 Q(g:)33.336 630 Q 12(pushl %ebp)81.336 642 R 18(movl %esp,)81.336
654 R(%ebp)6 E 18(movl $2,)81.336 666 R(a.1)6 E 18(popl %ebp)81.336 678
R(ret)81.336 690 Q F2 .373(Because the link)33.336 705 R .373
(er does not kno)-.13 F 3.623(wa)-.325 G .373
(bout C namespace and scope rules, the compiler must)-3.623 F 1.889
(append unique tags to the identi\214er names to a)33.336 720 R -.26(vo)
-.26 G 1.889(id con\215ict.).26 F(The)8.389 E F3(.comm)5.139 E F2
(directi)5.139 E 2.279 -.195(ve b)-.325 H(y).195 E(def)33.336 735 Q
1.353(ault creates a global symbol.)-.13 F(The)7.853 E F3(.local)4.603 E
F2(directi)4.603 E 1.743 -.195(ve ove)-.325 H 1.353(rrides that and pre)
.195 F -.195(ve)-.325 G 1.354(nts the).195 F 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 11)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 2.891(symbol from being visible to other object \
\214les during the linkage process \(although)33.336 120 R(relocation r\
eferences within the same \214le are satis\214ed by the symbol\).)33.336
135 Q/F2 13/Times-Bold@0 SF(Strings)247.472 165 Q/F3 10/Courier@0 SF
(char ary[]="ABCDEF";)33.336 207 Q(char *p="WXYZ";)33.336 231 Q
(main\(\))33.336 255 Q({)33.336 267 Q(*p=10;)90.936 279 Q(})33.336 291 Q
F1 .061(The declaration of)33.336 321 R/F4 13/Courier@0 SF(ary)3.311 E
F1 .062
(creates a 7-byte array of characters and initializes it to contain the)
3.311 F .396(characters in the string "ABCDEF".)33.336 336 R .396
(The declaration of)6.896 F F4(p)3.646 E F1 .395
(creates an area of memory that)3.645 F .753(is initialized with the ad\
dress of another area of memory which holds the string WXYZ.)33.336 351
R 2.472
(String constants are placed in a section of the object \214le kno)
33.336 366 R 2.472(wn as)-.325 F F4(.rodata)5.721 E F1 8.971(.T)C(his)
-8.971 E 1.25(section is typically loaded into memory as part of the te)
33.336 381 R 1.25(xt re)-.195 F 1.25(gion, b)-.195 F 1.25
(ut that is operating-)-.26 F(system dependent.)33.336 396 Q F3 194.4
(.data #enter)90.936 408 R(.data section)6 E 21.6(.type ary,@object)
90.936 420 R 21.6(.size ary,7)90.936 432 R(ary:)33.336 444 Q 9.6
(.string "ABCDEC")90.936 456 R(#emit sequence of bytes)67.2 E 3.6
(.section .rodata)90.936 468 R(#enter .rodata section)73.2 E 246
(.LC0: #private)39.336 480 R(label for string constant)6 E 9.6
(.string "WXYZ")90.936 492 R 194.4(.data #back)90.936 504 R
(to .data section)6 E(.align 4)90.936 516 Q 21.6(.type p,@object)90.936
528 R 21.6(.size p,4)90.936 540 R(#reserve 4 bytes starting at p)154.8 E
(p:)33.336 552 Q 21.6(.long .LC0)90.936 564 R
(#initialize with addr of string const)148.8 E(.text)90.936 576 Q 21.6
(.type main,@function)90.936 588 R(main:)33.336 600 Q 21.6(pushl %ebp)
90.936 612 R 27.6(movl %esp,)90.936 624 R(%ebp)6 E 27.6(subl $8,)90.936
636 R(%esp)6 E 27.6(movl p,)90.936 648 R(%eax)6 E 27.6(movb $10,)90.936
660 R(\(%eax\))6 E(leave)90.936 672 Q(ret)90.936 684 Q F2(What ld does)
230.858 714 Q F1 .001(The \214rst task of)33.336 744 R F4(ld)3.251 E F1
.001(is to tak)3.251 F 3.251(ei)-.13 G -2.405 -.52(nv e)-3.251 H .001
(ntory of all of the).52 F F4(.o)3.251 E F1
(\214les being presented to it.)3.25 E(It loads)6.5 E 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 12)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 1.298(in the symbol tables from all of the object \
\214les to create a uni\214ed symbol table for the)33.336 120 R 1.042
(entire program.)33.336 135 R 1.042
(There is only one global namespace for all link)7.542 F 1.042
(er symbols.)-.13 F 1.042(This might)7.542 F 1.248
(be considered a de\214cienc)33.336 150 R 6.188 -.845(y. L)-.195 H(et')
.845 E 4.498(ss)-.715 G 1.248(ay we ha)-4.498 F 1.638 -.195(ve a m)-.26
H(odule).195 E/F2 13/Courier@0 SF(foo.c)4.498 E F1 1.248
(that de\214nes a function)4.498 F(called)33.336 165 Q F2(calculate)
3.827 E F1 7.077(.I)C 3.827(fw)-7.077 G 3.827(ea)-3.827 G .577
(ttempt to incorporate that module into a program written by)-3.827 F
.617(someone else, the)33.336 180 R 3.867(ym)-.195 G .617(ay ha)-3.867 F
1.007 -.195(ve a)-.26 H .617(lso made a function called).195 F F2
(calculate)3.867 E F1 7.117(.I)C 3.867(ti)-7.117 G .617(s, after all, a)
-3.867 F(common name.)33.336 195 Q 2.373(If there is more than one de\
\214ning instance of a symbol, i.e. if a symbol is)33.336 216 R/F3 13
/Times-Italic@0 SF(multiply-)5.622 E(de\214ned)33.336 231 Q F1 5.499(,t)
C 2.249(his is generally a f)-5.499 F 2.249(atal error)-.13 F 8.749(.C)
-.715 G 2.249(onsider what w)-8.749 F 2.249(ould happen if a programmer)
-.13 F .234(accidentally included tw)33.336 246 R 3.483(ov)-.13 G .233
(ersions of function)-3.678 F F2(f)3.483 E F1(abo)3.483 E .623 -.195
(ve i)-.195 H 3.483(nt).195 G .493 -.13(wo d)-3.483 H(if).13 E(ferent)
-.325 E F2(.c)3.483 E F1 3.483(\214les. When)3.483 F F2(f)3.483 E F1
1.46(is called some)33.336 261 R 1.46(where in the program, which v)
-.325 F 1.461(ersion should be called?)-.195 F(\(Ho)7.961 E(we)-.325 E
-.195(ve)-.325 G 2.501 -.52(r, r).195 H(ecall).52 E(the common block e)
33.336 276 Q(xception abo)-.195 E .39 -.195(ve f)-.195 H
(or uninitialized v).195 E(ariables\))-.325 E 3.189 -1.04(To a)33.336
297 T 1.109(meliorate this problem of \215at global link)1.04 F 1.109
(er namespace, a con)-.13 F -.195(ve)-.52 G 1.109(ntion e).195 F 1.109
(xists that one)-.195 F 1.206(should prepend to one')33.336 312 R 4.457
(sg)-.715 G 1.207(lobal v)-4.457 F 1.207
(ariable and function names a reasonably unique pre\214x.)-.325 F .983
(Therefore, we might call our function)33.336 327 R F2(foo_calculate)
4.233 E F1 7.483(.T)C .982(his is less lik)-7.483 F .982
(ely to con\215ict)-.13 F(with another name.)33.336 342 Q(It isn')6.5 E
3.25(tap)-.234 G(erfect solution, b)-3.25 E(ut it w)-.26 E(orks f)-.13 E
(airly well in reality)-.13 E(.)-.845 E 1.124(Global v)33.336 363 R
1.124(ariable and function names that are intended to remain pri)-.325 F
-.325(va)-.325 G 1.124(te to the).325 F F2(.c)4.374 E F1 1.125
(\214le in)4.374 F .615(which the)33.336 378 R 3.865(ya)-.195 G .615
(re declared should be protected with the)-3.865 F F2(static)3.865 E F1
.615(storage class \(see belo)3.865 F(w\).)-.325 E F2(static)33.336 393
Q F1 .965(symbols still require the assistance of the link)4.215 F .965
(er to be relocated.)-.13 F(Ho)7.465 E(we)-.325 E -.195(ve)-.325 G 2.005
-.52(r, t).195 H(he).52 E .953(use of)33.336 408 R F2(static)4.203 E F1
.952
(causes the compiler and the assembler to \215ag that symbol as a LOCAL)
4.203 F 5.837(symbol. The)33.336 423 R(link)5.837 E 2.587
(er will then enter the symbol into a pri)-.13 F -.325(va)-.325 G 2.587
(te namespace just for the).325 F 2.002
(corresponding object \214le, and the symbol will ne)33.336 438 R -.195
(ve)-.325 G 5.252(rc).195 G 2.002(on\215ict with symbols from other)
-5.252 F(object \214les.)33.336 453 Q .214(There are rare cases where i\
t is useful to deliberately rede\214ne a symbol.)33.336 474 R -.195(Fo)
6.714 G 3.464(ri).195 G .215(nstance, we)-3.464 F 1.643
(may need to change ho)33.336 489 R 4.893(wap)-.325 G 1.643
(iece of code, a)-4.893 F -.325(va)-.26 G 1.643
(ilable only in library or object \214le form,).325 F .823
(calls another function.)33.336 504 R .823(This all f)7.323 F .823
(alls under the heading of "wild and crazy ld tricks" and)-.13 F 1.765
(will not be discussed further)33.336 519 R 8.265(.J)-.715 G 1.765
(ust remember that an)-8.265 F 5.015(yd)-.195 G 1.764
(uplicate symbol de\214nitions are)-5.015 F(generally wrong.)33.336 534
Q .655(Frequently symbols ha)33.336 555 R 1.045 -.195(ve a d)-.26 H .655
(e\214ning instance, b).195 F .655(ut the)-.26 F 3.906(ya)-.195 G .656
(re ne)-3.906 F -.195(ve)-.325 G 3.906(ra).195 G .656
(ctually referenced.)-3.906 F -.195(Fo)7.156 G(r).195 E -.195(ex)33.336
570 S 2.373(ample, the programmer may write a function, b).195 F 2.372
(ut ne)-.26 F -.195(ve)-.325 G 5.622(rc).195 G 2.372
(all it, or declare a global)-5.622 F -.325(va)33.336 585 S
(riable, yet ne).325 E -.195(ve)-.325 G 3.25(ru).195 G(se it in an e)
-3.25 E 3.25(xpression. The)-.195 F(link)3.25 E(er doesn')-.13 E 3.25
(tc)-.234 G(are about this.)-3.25 E(Ho)33.336 606 Q(we)-.325 E -.195(ve)
-.325 G 4.764 -.52(r, i).195 H 6.974(tc).52 G 3.724
(ares deeply about the opposite case: a symbol that is referenced \(by)
-6.974 F 1.941(appearing in a relocations table\) b)33.336 621 R 1.941
(ut which has no de\214ning instance.)-.26 F 1.941(Such a situation)
8.441 F(mak)33.336 636 Q .721(es it impossible for the link)-.13 F .722
(er to complete its task of creating an absolute e)-.13 F -.195(xe)-.195
G(cutable).195 E 1.24(\214le with no dangling references.)33.336 651 R
1.24(Therefore, it will stop with a f)7.74 F 1.239(atal error)-.13 F
4.489(,r)-.52 G 1.239(eporting the)-4.489 F(unde\214ned symbol and the \
object \214le or \214les in which it is referenced.)33.336 666 Q 2.377
(Once all of the symbol de\214nitions and references are resolv)33.336
687 R(ed,)-.195 E F2(ld)5.627 E F1 2.377(will assemble the)5.627 F F2
(a.out)33.336 702 Q F1 3.627(\214le by)3.627 F .376
(concatenating all of the te)3.627 F .376
(xt sections of all of the object \214les, forming the)-.195 F(single)
33.336 717 Q F2(.text)5.047 E F1 1.797(section of the)5.047 F F2(a.out)
5.048 E F1 8.298(.I)C 5.048(nd)-8.298 G 1.798(oing so, the te)-5.048 F
1.798(xt sections are relocated.)-.195 F(An)8.298 E .742
(instruction which w)33.336 732 R .742(as at of)-.13 F .742
(fset 10 in a particular object \214le')-.325 F 3.992(st)-.715 G -.195
(ex)-3.992 G 3.992(ts).195 G .742(ection may no)-3.992 F 3.991(wb)-.325
G 3.991(ea)-3.991 G(t)-3.991 E 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 13)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(of)33.336 120 Q(fset 1034 in the)-.325 E/F2 13
/Courier@0 SF(a.out)3.25 E F1(.)A(Furthermore,)33.336 141 Q F2(ld)3.889
E F1 .64(has a concept of the)3.889 F F2 .64(load address)3.89 F F1 .64
(of the program, i.e. the memory)3.89 F .771
(address at which the \214rst byte of the)33.336 156 R F2(.text)4.02 E
F1 .77(section of the)4.02 F F2(a.out)4.02 E F1 .77(will be loaded.)4.02
F(This)7.27 E(kno)33.336 171 Q .276(wledge is part of con\214guring)
-.325 F F2(ld)3.526 E F1 .276
(for a particular operating system and processor type,)3.526 F 2.486
(and is not normally something that the programmer needs to w)33.336 186
R 2.486(orry about.)-.13 F 2.486(The load)8.986 F 2.53
(address is also placed in the)33.336 201 R F2(a.out)5.78 E F1 2.53
(\214le so the operating system is sure to load the)5.78 F 1.465
(program at the address for which it w)33.336 216 R 1.465(as link)-.13 F
4.715(ed. Kno)-.13 F 1.464(wing the size of each object \214le')-.325 F
(s)-.715 E F2(.text)33.336 231 Q F1(section,)5.527 E F2(ld)5.527 E F1
2.278(can calculate the absolute address that it will occup)5.527 F
5.528(yi)-.13 G 5.528(nt)-5.528 G 2.278(he \214nal)-5.528 F 1.794
(image, and can thus complete the symbol table, assigning absolute v)
33.336 246 R 1.794(alues to each te)-.325 F(xt)-.195 E(symbol.)33.336
261 Q 3.975(As)33.336 282 S .725(imilar process is undertak)-3.975 F
.725(en for the)-.13 F F2(data)3.975 E F1(and)3.975 E F2(bss)3.975 E F1
(sections.)3.975 E F2(ld)7.225 E F1 .726(assigns an absolute)3.976 F
1.703(address to each)33.336 297 R F2(data)4.952 E F1(or)4.952 E F2(bss)
4.952 E F1 1.702
(symbol, based on the con\214gured starting address of the)4.952 F F2
(data)33.336 312 Q F1(and)3.669 E F2(bss)3.669 E F1 .419(memory re)3.669
F 3.669(gions. In)-.195 F .419(the case of)3.669 F F2(data)3.669 E F1
.419(symbols, the initializers contained)3.669 F .335(in the indi)33.336
327 R .335(vidual object \214les are concatenated, forming the)-.325 F
F2(.data)3.585 E F1 .335(section of the)3.585 F F2(a.out)3.585 E F1(,)A
.805(which will thus contain the byte-for)33.336 342 R .805
(-byte image of what that section will look lik)-.26 F 4.056(ew)-.13 G
(hen)-4.056 E .433(the program starts.)33.336 357 R -.195(Fo)6.933 G(r)
.195 E F2(bss)3.683 E F1 .433(symbols, there are ob)3.683 F .433
(viously no initializers.)-.195 F F2(ld)6.933 E F1 -.13(ke)3.683 G .433
(eps track).13 F 1.711(of the total number of)33.336 372 R F2(bss)4.961
E F1 1.712(bytes needed, and places that information into the)4.961 F F2
(a.out)4.962 E F1 2.007(header so the operating system can allocate the\
 memory when the program is loaded.)33.336 387 R 1.649
(During this process, each)33.336 402 R F2(data)4.899 E F1(or)4.899 E F2
(bss)4.899 E F1 1.649(symbol is assigned an absolute address in the)
4.899 F(symbol table.)33.336 417 Q(No)33.336 438 Q(w)-.325 E F2(ld)3.378
E F1 .128(concatenates the v)3.378 F .127
(arious object \214les, processing the relocation records, replacing)
-.325 F 1.707(each "placeholder" with the actual, absolute address that\
 the associated symbol is no)33.336 453 R(w)-.325 E(kno)33.336 468 Q
2.383(wn to ha)-.325 F -.195(ve)-.26 G 8.883(.I).195 G 5.633(nt)-8.883 G
2.383(he case of Program-Counter)-5.633 F(-Relati)-.26 E 2.772 -.195
(ve r)-.325 H 2.382(elocation types, the proper).195 F(of)33.336 483 Q(\
fset is calculated with respect to the absolute address of the placehol\
der in question.)-.325 E/F3 13/Times-Bold@0 SF(Libraries)241.336 504 Q
F1 2.583(When you write a C program, you e)33.336 534 R 2.583
(xpect certain functions, such as)-.195 F F2(printf)5.834 E F1 5.834(,t)
C 5.834(ob)-5.834 G(e)-5.834 E -.26(av)33.336 549 S 3.656
(ailable. These)-.065 F .406(are supplied in the form of a)3.656 F F3
(library)3.656 E F1 6.905(.A)C .405(library is basically a collection)
-3.25 F(of)33.336 564 Q F2(.o)4.855 E F1 1.605(\214les, or)4.855 F -.065
(ga)-.234 G 1.605(nized together under a common wrapper format called a)
.065 F F2(.a)4.855 E F1 4.855(\214le. It)4.855 F(is)4.856 E
(similar to a "tar" or "zip" archi)33.336 579 Q .39 -.195(ve \()-.325 H
(although no compression is pro).195 E(vided\).)-.195 E(Con)33.336 600 Q
-.195(ve)-.52 G 1.166(ntion is that a library).195 F/F4 13
/Times-Italic@0 SF(ZZZ)4.416 E F1 1.165
(is contained in the library \214le:)4.415 F F2(libZZZ.a)4.415 E F1
7.665(.U)C 1.165(sing the)-7.665 F F2(-l)33.336 615 Q F1 .874(option to)
4.124 F F2(cc)4.124 E F1 .874(tells the)4.124 F F2(cc)4.124 E F1 .874
(program to ask the link)4.124 F .874
(er to link with the speci\214ed library)-.13 F(.)-.845 E -.195(Fo)
33.336 630 S 4.488(re).195 G(xample:)-4.683 E F2 1.238(cc myprog.c -lm)
4.488 F F1 1.238(asks for the system library \214le)4.488 F F2(libm.a)
4.488 E F1 1.238(\(the math)4.488 F 2.232
(library\) to be additionally link)33.336 645 R 5.482(ed. By)-.13 F(def)
5.482 E(ault,)-.13 E F2(cc)5.482 E F1(al)5.482 E -.13(wa)-.13 G 2.232
(ys links the standard C library).13 F F2(libc.a)33.336 660 Q F1 6.5(.T)
C(hese libraries are located in a system directory)-6.5 E 3.25(,t)-.845
G(ypically)-3.25 E F2(/usr/lib)3.25 E F1(.)A 1.183
(Although a library embodies a collection of object \214les, the beha)
33.336 681 R 1.183(vior when linking to a)-.26 F .418
(library is slightly dif)33.336 696 R .418(ferent than if one just link)
-.325 F .419(ed in all of the object \214les indi)-.13 F(vidually)-.325
E 6.919(.I)-.845 G(n)-6.919 E .802(the latter case, the)33.336 711 R F2
(.text)4.052 E F1(and)4.052 E F2(.data)4.052 E F1 .802
(sections of each object \214le w)4.052 F .802(ould wind up in the)-.13
F F2(a.out)33.336 726 Q F1 5.579(,r)C -2.925 -.195(eg a)-5.579 H 2.329
(rdless of whether or not an).195 F 2.329
(ything in a particular object \214le w)-.195 F 2.329(as actually)-.13 F
4.583(used. W)33.336 741 R 1.333(ith a library)-.52 F(,)-.845 E F2(ld)
4.583 E F1 -.26(bu)4.583 G 1.333
(ilds a symbol table of all the object \214les in the library).26 F
4.582(,a)-.845 G(nd)-4.582 E 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 14)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 4.032(then only selects those object \214les that a\
re actually needed for inclusion into the)33.336 120 R -.195(exe)33.336
135 S(cutable.).195 E/F2 13/Times-Bold@0 SF(Dynamic Linking)218.755 156
Q F1 .663(When dynamic \(shared\) libraries are used, there are tw)
33.336 186 R 3.913(op)-.13 G .663(arts to the linkage process.)-3.913 F
(At)7.163 E .151(compile time,)33.336 201 R/F3 13/Courier@0 SF(ld)3.401
E F1 .151(links ag)3.401 F .151(ainst the dynamic library \(which has a)
-.065 F F3(.so)3.402 E F1 -.195(ex)3.402 G .152(tension in UNIX\)).195 F
.772(for the purpose of learning which symbols are de\214ned by it.)
33.336 216 R(Ho)7.271 E(we)-.325 E -.195(ve)-.325 G 1.811 -.52(r, n).195
H .771(one of the code).52 F 3.422(or data initializers from the dynami\
c library are actually included in the a.out \214le.)33.336 231 R
(Instead,)33.336 246 Q F3(ld)3.25 E F1
(records which dynamic libraries were link)3.25 E(ed ag)-.13 E(ainst.)
-.065 E .794(At e)33.336 267 R -.195(xe)-.195 G .794
(cution time, the second phase tak).195 F .794(es place before the)-.13
F F3(main)4.044 E F1 .794(gets in)4.044 F -.26(vo)-.52 G -.13(ke).26 G
4.044(d. A).13 F(small)4.043 E .687(helper program called)33.336 282 R
F3(ld.so)3.937 E F1 .687
(is loaded into the process address space by the k)3.937 F .688
(ernel and)-.13 F -.195(exe)33.336 297 S 3.349(cuted. It).195 F .099
(is pro)3.349 F .099(vided with the list of dynamic libraries.)-.195 F
.098(The dynamic loader \214nds each)6.598 F .837
(of the required libraries, pro)33.336 312 R .837(vides ne)-.195 F 4.087
(wm)-.325 G .837(emory re)-4.087 F .837(gions to hold the te)-.195 F
.838(xt and data of each)-.195 F(library)33.336 327 Q 3.25(,a)-.845 G
(nd \(conceptually\) loads them into those re)-3.25 E(gions.)-.195 E
2.478(Some additional magic is required to link the static and the dyna\
mic portions of the)33.336 348 R -.195(exe)33.336 363 S 6.429
(cutable. This).195 F 3.179(aspect is e)6.429 F 3.179
(xtremely speci\214c to the operating system and processor)-.195 F 3.462
(architecture. In)33.336 378 R .212
(general, for functions which are de\214ned in a shared library)3.462 F
3.462(,d)-.845 G .212(ummy stubs)-3.462 F 2.477(are pro)33.336 393 R
2.477(vided in what is kno)-.195 F 2.477(wn as a)-.325 F F2(Pr)5.727 E
(ocedur)-.234 E 5.727(eL)-.234 G 2.477(inkage T)-5.727 F(able)-1.196 E
F1 8.977(.T)C 2.477(hese stubs contain)-8.977 F .587
(jumps to addresses which are \214lled in by the dynamic link)33.336 408
R(er)-.13 E 7.087(.T)-.715 G .586(his allo)-7.087 F .586
(ws the static code)-.325 F 2.125(to mak)33.336 423 R 5.375(ef)-.13 G
2.125(unction calls without being dynamic-a)-5.375 F -.13(wa)-.195 G
5.376(re. Lik).13 F -.325(ew)-.13 G 2.126(ise, a table kno).325 F 2.126
(wn as the)-.325 F F2 1.009(Global Offset T)33.336 438 R(able)-1.196 E
F1(pro)4.259 E 1.009(vides transparent access to an)-.195 F 4.258(yg)
-.195 G 1.008(lobal v)-4.258 F 1.008(ariables which a shared)-.325 F
1.518(library e)33.336 453 R 4.768(xports. The)-.195 F 1.518
(dynamic libraries themselv)4.768 F 1.518
(es need to be compiled in such as w)-.195 F(ay)-.13 E 2.728(that the)
33.336 468 R 5.978(ya)-.195 G 2.728(re capable of being loaded at an)
-5.978 F 5.977(yv)-.195 G 2.727(irtual address.)-5.977 F 2.727
(This is done with the)12.477 F F3(-fpic)33.336 483 Q F1
(\215ag to the compiler)3.25 E(.)-.715 E .7
(There is a slight performance penalty when using dynamic libraries.)
33.336 504 R .7(In additional to the)7.2 F .367(delay in e)33.336 519 R
-.195(xe)-.195 G .367(cuting the program imposed by needing to load and\
 link the libraries, calls to).195 F 2.505(functions in the dynamic lib\
rary require an additional branch, and accesses to global)33.336 534 R
3.543(symbols from within the shared library must use a position-indepe\
ndent addressing)33.336 549 R
(method, which generally requires an indirect addressing mode.)33.336
564 Q F2(Alignment and P)201.302 609 Q(adding)-.13 E F1(Dif)33.336 645 Q
4.779(ferent architectures impose dif)-.325 F 4.78
(ferent alignment restrictions.)-.325 F -.195(Fo)11.28 G 8.03(re).195 G
4.78(xample, on a)-8.225 F(SP)33.336 660 Q 3.188(ARC processor)-1.196 F
6.438(,a)-.52 G 3.187
(ccesses to ints/longs must be at memory addresses which are a)-6.438 F
.34(multiple of 4.)33.336 675 R -.78(Vi)6.84 G .34
(olation results in a f).78 F .34(atal run-time e)-.13 F 3.59
(xception. While)-.195 F .34(the X86 architecture)3.59 F .385
(is more for)33.336 690 R(gi)-.234 E .385(ving, better performance is o\
btained if 4-byte accesses are aligned on 4-byte)-.325 F(boundaries.)
33.336 705 Q .121(When laying out a structure and assigning of)33.336
726 R .122(fsets to its members, the compiler must use a)-.325 F
(recursi)33.336 741 Q 3.32 -.195(ve a)-.325 H 2.93
(lgorithm which is based on a lookup table gi).195 F 2.93
(ving the size and alignment)-.325 F 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 15)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF .445(constraints of the scalar data types.)33.336
120 R .445(The compiler uses tw)6.945 F 3.696(og)-.13 G .446
(olden rules: 1\) The of)-3.696 F .446(fset of)-.325 F(an)33.336 135 Q
4.349(ym)-.195 G 1.099
(ember must be a multiple of the alignment restriction of that member)
-4.349 F 7.599(.E)-.715 G 1.099(.g. if the)-7.599 F .78
(member is an int, the of)33.336 150 R .78
(fset must be a multiple of 4.)-.325 F .78
(2\) The total size of the structure is)7.28 F 2.224(such that were the\
 structure in an array of such structures, each element of the array)
33.336 165 R -.13(wo)33.336 180 S(uld be).13 E(gin at an of)-.195 E
(fset which satis\214es the most restricti)-.325 E .39 -.195(ve m)-.325
H(ember of the structure.).195 E 2.738(The compiler maintains an of)
33.336 201 R 2.738(fset counter)-.325 F 5.988(,w)-.52 G 2.738
(hich is intialized to 0 for each structure)-5.988 F 5.109
(de\214nition. 0)33.336 216 R 1.858(is clearly a multiple of an)5.108 F
5.108(ya)-.195 G 1.858(lignment boundary)-5.108 F 5.108(,a)-.845 G 1.858
(nd therefore rule #1 is)-5.108 F 2.23(satis\214ed at the start.)33.336
231 R 2.23(After inserting a member)8.73 F 5.48(,t)-.52 G 2.231(he of)
-5.48 F 2.231(fset counter is adv)-.325 F 2.231(anced by the)-.325 F
3.102(sizeof that member)33.336 246 R 9.602(.T)-.715 G 3.102
(hen before the ne)-9.602 F 3.102(xt member is inserted, the of)-.195 F
3.102(fset counter is)-.325 F .366(rounded up to the ne)33.336 261 R
.367(xt alignment boundary based on the constraints of that ne)-.195 F
.367(xt member)-.195 F(.)-.715 E(E.g. in the follo)33.336 276 Q(wing :)
-.325 E/F2 10/Courier@0 SF(struct example {)33.336 288 Q(int a;)90.936
300 Q(char b;)90.936 312 Q(int c;)90.936 324 Q(char d;)90.936 336 Q(};)
33.336 348 Q F1 .704(Assuming that ints are 4 bytes long and are aligne\
d on 4 byte boundaries, and that chars)33.336 363 R 1.825
(are 1 byte long and ha)33.336 378 R 2.215 -.195(ve n)-.26 H 5.075(oa)
.195 G 1.825(lignment constraint: Member a is clearly gi)-5.075 F -.195
(ve)-.325 G 5.076(no).195 G -.325(ff)-5.076 G 1.826(set 0.).325 F .341
(Member b is gi)33.336 393 R -.195(ve)-.325 G 3.591(no).195 G -.325(ff)
-3.591 G .341(set 4.).325 F .34(The of)6.84 F .34(fset counter is no)
-.325 F 3.59(w5)-.325 G 3.59(,b)-3.59 G .34(ut member c requires an of)
-3.85 F(fset)-.325 E .091(which is a multiple of 4.)33.336 408 R .092
(Therefore the counter is rounded up and c is gi)6.592 F -.195(ve)-.325
G 3.342(no).195 G -.325(ff)-3.342 G .092(set 8.).325 F(The)6.592 E
(space between b and c is w)33.336 423 Q(asted and is called)-.13 E/F3
13/Times-Bold@0 SF(padding)3.25 E F1(.)A(\()33.336 444 Q/F4 13
/Times-Italic@0 SF 2.716(Aside: on gcc compiler)B 2.715
(s, it is possible to use the dir)-.13 F 2.715(ective __pac)-.481 F -.13
(ke)-.26 G 2.715(d__ to for).13 F 2.715(ce the)-.481 F .591
(compiler to lay out the structur)33.336 459 R 3.841(ew)-.481 G .591
(ithout padding)-3.841 F 7.091(.T)-.195 G .591(his is often used to mak)
-7.091 F -7.09 3.841(ea s)-.13 H(tructur)-3.841 E(e)-.481 E(matc)33.336
474 Q 3.25(hap)-.195 G(hysical de)-3.25 E(vice mapped into memory)-.195
E 3.25(,o)-.715 G 3.25(rt)-3.25 G(he format of a network pr)-3.25 E
(otocol.)-.585 E F1(\))A 2.574
(When the last member is laid out, the compiler determines the w)33.336
495 R 2.574(orst-case alignment)-.13 F .949
(restriction among all the members.)33.336 510 R .949(The of)7.449 F
.949(fset counter is then rounded up \(if necessary\))-.325 F 1.171
(to satisfy that w)33.336 525 R 1.171(orst-case constraint.)-.13 F(The)
7.671 E/F5 13/Courier@0 SF(sizeof)4.421 E F1 1.171
(the structure type is this rounded-up)4.421 F -.325(va)33.336 540 S
6.463(lue. This).325 F(tak)6.463 E 3.213(es care of Rule #2 abo)-.13 F
-.195(ve)-.195 G 6.464(,a).195 G 3.214
(nd by satisfying that rule, Rule #1 will)-6.464 F(automatically be sat\
is\214ed for all members of all elements of an array of structures.)
33.336 555 Q 2.106(So, element d is gi)33.336 576 R -.195(ve)-.325 G
5.356(nt).195 G 2.106(he of)-5.356 F 2.106(fset 12, b)-.325 F 2.106
(ut in order to satisfy rule #2, padding must be)-.26 F .866
(inserted at the end, after element d.)33.336 591 R .866(Since the w)
7.366 F .867(orst-case alignment restriction is that of)-.13 F 2.374(th\
e int \(4 byte boundary\) 3 bytes of padding are added, making the tota\
l size of the)33.336 606 R(structure 16 bytes.)33.336 621 Q 1.725
(The algorithm abo)33.336 642 R 2.115 -.195(ve c)-.195 H 1.725
(an be applied recursi).195 F -.195(ve)-.325 G 1.726
(ly for structures which contain aggre).195 F -.065(ga)-.195 G(te).065 E
(data types \(structures, unions and arrays\) as members.)33.336 657 Q
.752(One can write a simple test program to determine the sizeof and al\
ignment of basic data)33.336 678 R(types:)33.336 693 Q F2
(#define S\(t\) struct {char a;t test;} s_##t)33.336 705 Q
(typedef int * ptr;)33.336 729 Q(typedef long long longlong ;)33.336 741
Q 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 16)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(typedef long double longdouble;)33.336 117 Q(S\(char\);)
33.336 129 Q(S\(short\);)33.336 141 Q(S\(int\);)33.336 153 Q(S\(long\);)
33.336 165 Q(S\(longlong\);)33.336 177 Q(S\(float\);)33.336 189 Q
(S\(double\);)33.336 201 Q(S\(longdouble\);)33.336 213 Q(S\(ptr\);)
33.336 225 Q(main\(\))33.336 249 Q({)33.336 261 Q
(#define AS\(t\) printf\("%s size %d alignment %d0,#t,)33.336 273 Q 22.8
(\(int\)sizeof\(s_##t.test\), \(int\)\(\(char)45.6 F
(*\)&s_##t.test - \(char *\)&s_##t\)\))6 E(AS\(char\);)33.336 285 Q
(AS\(short\);)33.336 297 Q(AS\(int\);)33.336 309 Q(AS\(long\);)33.336
321 Q(AS\(longlong\);)33.336 333 Q(AS\(float\);)33.336 345 Q
(AS\(double\);)33.336 357 Q(AS\(longdouble\);)33.336 369 Q(AS\(ptr\);)
33.336 381 Q(})33.336 393 Q/F2 13/Times-Bold@0 SF(Br)191.988 438 Q
(oad vs narr)-.234 E .26 -.13(ow c)-.234 H(ompilers).13 E/F3 13
/Times-Roman@0 SF .682(There are tw)33.336 474 R 3.932(od)-.13 G(if)
-3.932 E .682(ferent approaches to compiler design.)-.325 F .682
(One attempts to craft an optimal)7.182 F .821
(compiler for a speci\214c architecture or narro)33.336 489 R 4.071(wr)
-.325 G .821(ange of architectures.)-4.071 F .821(The other attempts)
7.321 F 1.836(to mak)33.336 504 R 5.086(eag)-.13 G 1.836
(eneral-purpose compiler which w)-5.086 F 1.836
(orks consistently across a broad range of)-.13 F 4.656
(architectures. The)33.336 519 R 1.406(gcc project is an e)4.656 F 1.406
(xample of the latter)-.195 F 4.656(,e)-.52 G(mplo)-4.656 E 1.406
(ying the front-end, IR,)-.13 F(optimizer)33.336 534 Q 3.25(,c)-.52 G
(ode generation architecture described throughout this course.)-3.25 E
2.582(The adv)33.336 555 R 2.582(antage of the former approach is it te\
nds to produce a more optimal output,)-.325 F 1.101(because it can adv)
33.336 570 R 1.101(ance certain decisions further forw)-.325 F 1.1
(ard in the compilation process, not)-.13 F(ha)33.336 585 Q(ving to w)
-.26 E(orry about re-tar)-.13 E(getability)-.234 E(.)-.845 E .117
(The adv)33.336 606 R .117
(antage of the latter approach is of course re-use of compiler code.)
-.325 F .117(This is not just)6.617 F 3.964(am)33.336 621 S .714
(atter of laziness.)-3.964 F .713(The ef)7.214 F .713
(fort which goes in to v)-.325 F .713(erifying the correctness of the v)
-.195 F(arious)-.325 E .019
(phases of the compiler is then reaped for man)33.336 636 R 3.27(yd)
-.195 G(if)-3.27 E .02(ferent tar)-.325 F .02(gets and se)-.234 F -.195
(ve)-.325 G .02(ral dif).195 F .02(ferent input)-.325 F(languages.)
33.336 651 Q 1.046(In designing such a broad compiler)33.336 672 R 4.296
<2c8c>-.52 G 1.046(nding an appropriate IR is challenging because of)
-4.296 F 2.548(the wide v)33.336 687 R 2.548(ariety of tar)-.325 F 2.548
(get architectures.)-.234 F 2.548
(It is not just a matter of renaming opcodes.)9.048 F
(There are substantial philosophical dif)33.336 702 Q
(ferences among processors.)-.325 E F2(CISC vs RISC)227.25 732 Q 0 Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 17)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 2.907(One of the basic distinctions is Comple)33.336
120 R 6.157(xI)-.195 G 2.906(nstruction Set vs Reduced Instruction Set)
-6.157 F 6.306(design. The)33.336 135 R 3.056(CISC approach is older)
6.306 F 6.306(,h)-.52 G -.26(av)-6.306 G 3.056(ing e).26 F -.26(vo)-.325
G(lv).26 E 3.056(ed from the days of hand-crafted)-.195 F(assembly)
33.336 150 Q 7.79(.I)-.845 G 4.54(tt)-7.79 G 1.29(ends to of)-4.54 F
1.289(fer man)-.325 F 2.979 -.845(y, c)-.195 H 1.289
(omplicated instructions and addressing modes, often).845 F .774
(with quirk)33.336 165 R 4.024(yr)-.195 G .774
(estrictions or optimiziations which mak)-4.024 F 4.025(es)-.13 G .775
(ense to a human programmer b)-4.025 F(ut)-.26 E .18(are dif)33.336 180
R .18(\214cult to e)-.325 F .179(xpress to an optimizing compiler)-.195
F 6.679(.I)-.715 G 3.429(nc)-6.679 G .179(ontrast, RISC w)-3.429 F .179
(as an approach that)-.13 F(de)33.336 195 Q -.195(ve)-.325 G .152
(loped out of research into ho).195 F 3.403(wh)-.325 G(igh-le)-3.403 E
-.195(ve)-.325 G 3.403(ll).195 G .153
(anguages were being treated by compilers.)-3.403 F 1.277(It w)33.336
210 R 1.277(as designed with fe)-.13 F(wer)-.325 E 4.526(,s)-.52 G 1.276
(impler instructions and addressing modes.)-4.526 F 1.276(Whereas CISC)
7.776 F 1.059(instructions tend to be of v)33.336 225 R 1.059
(ariable size and e)-.325 F -.195(xe)-.195 G 1.06
(cution time, RISC instructions tend to be).195 F<8c78>33.336 240 Q
3.124(ed size and constant time.)-.195 F 3.124(This mak)9.624 F 3.124
(es it easier for a compiler to generate good)-.13 F 1.394
(assembly code, b)33.336 255 R 1.394(ut mak)-.26 F 1.395(es it more a)
-.13 F(wkw)-.195 E 1.395(ard for a human programmer)-.13 F 7.895(.W)
-.715 G 4.645(ew)-8.935 G 1.395(ill look at)-4.645 F(one e)33.336 270 Q
(xample of each approach.)-.195 E/F2 13/Times-Bold@0 SF
(The Intel X86 ar)193.736 315 Q(chitectur)-.234 E(e)-.234 E F1 .091
(X86 refers broadly to a f)33.336 351 R .091
(amily of Intel \(and compatible\) microprocessors manuf)-.13 F .091
(actured in)-.13 F .044(the last 20 years or so.)33.336 366 R .044
(It is also called the X86 architecture by Intel.)6.544 F .044
(The \214rst 32-bit X86)6.544 F 3.431(processor w)33.336 381 R 3.431
(as the 80386.)-.13 F 3.43(X86-64 is a 64-bit e)9.93 F 3.43
(xtension to X86.)-.195 F(Intel')9.93 E 6.68(si)-.715 G 6.68(saC)-6.68 G
(ISC)-6.68 E .508
(architecture which is a direct linear descendent of the v)33.336 396 R
.508(ery \214rst microprocessor)-.195 F 3.758(,t)-.52 G .508(he 4004)
-3.758 F(\(a 4-bit product\).)33.336 411 Q .3(There are man)33.336 432 R
3.55(yw)-.195 G .3(ho \214nd the X86 architecture to be a dinosaur)-3.55
F 3.55(,a)-.52 G .299(nd a badly designed one)-3.55 F .692
(at that, which should ha)33.336 447 R 1.082 -.195(ve l)-.26 H .692
(ong ago become e).195 F 3.943(xtinct. Ho)-.195 F(we)-.325 E -.195(ve)
-.325 G 1.733 -.52(r, I).195 H(BM').52 E 3.943(sc)-.715 G .693
(hoice of it for its)-3.943 F(\214rst personal computer sealed its f)
33.336 462 Q(ate as the most popular processor architecture.)-.13 E
1.514(The X86-64 architecture e)33.336 483 R 1.513
(xtends the 32-bit X86 to use 64-bit re)-.195 F 1.513
(gisters, while retaining)-.195 F(backw)33.336 498 Q
(ards compatability with 32-bit X86 code.)-.13 E(Belo)33.336 519 Q 3.922
(wi)-.325 G 3.922(sas)-3.922 G .672
(ummary of the X86/X86-4 architecture The reader is detoured to the of)
-3.922 F(\214cial)-.325 E(reference manuals for full details.)33.336 534
Q F2(Intel vs UNIX assembly syntax)182.114 564 Q F1 .359(The Intel docu\
mentation uses the Intel standard assembly language syntax, b)33.336 600
R .358(ut the UNIX)-.26 F(assembler)33.336 615 Q/F3 13/Courier@0 SF(as)
8.078 E F1(follo)8.078 E 4.828(ws a dif)-.325 F 4.828(ferent con)-.325 F
-.195(ve)-.52 G 4.828(ntion \(which is consistent across dif).195 F
(ferent)-.325 E 4.732(processors\). In)33.336 630 R 1.482
(the UNIX syntax, an identi\214er is unambiguously an assembler symbol.)
4.732 F 4.125 -1.04(To r)33.336 645 T 2.045(eference a re)1.04 F(gister)
-.195 E 5.295(,i)-.52 G 2.045(ts name is pre\214x)-5.295 F 2.045
(ed with a percent sign, e.g. %eax.)-.195 F 4.125 -1.04(To u)8.545 H
2.046(se a)1.04 F .699(symbol as an immediate v)33.336 660 R .699
(alue, the dollar sign is used as a pre\214x.)-.325 F .698
(Otherwise the symbol)7.198 F .986(means the contents of that address.)
33.336 675 R(Re)7.486 E .986
(gister indirect addressing modes are indicated by)-.195 F(brack)33.336
690 Q 5.082(ets or parentheses. UNIX assembly instructions are opcode s\
rc1,src2,dst for)-.13 F .698
(3-address instructions or opcode src,dst for 2-address.)33.336 705 R
.699(\(Note that Intel syntax is dst,src\).)7.199 F 4.6 -1.04(We w)
33.336 720 T 2.52(ill use the UNIX syntax in these notes.)1.04 F 2.519
(Another name for this is the "A)9.019 F(T&T")-1.443 E
(syntax, after the original authors of UNIX)33.336 735 Q 0 Cg EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 18)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 2.656(In the UNIX/A)33.336 120 R 2.656
(T&T syntax, where a particular opcode can be performed at dif)-1.443 F
(ferent)-.325 E 1.291(precisions, that opcode recei)33.336 135 R -.195
(ve)-.325 G 4.54(sal).195 G 1.29(etter suf)-4.54 F 1.29(\214x: b,w)-.325
F 1.29(,l,q for 8,16,32 and 64-bit operations)-.845 F(respecti)33.336
150 Q -.195(ve)-.325 G(ly).195 E(.)-.845 E/F2 13/Times-Bold@0 SF
(X86 Register Model)212.099 180 Q F1 .403(When referring to X86 re)
33.336 216 R .403(gisters, their size is implied by a pre\214x.)-.195 F
-.195(Fo)6.903 G 3.653(re).195 G .403(xample, there is a)-3.848 F .393
(32-bit re)33.336 231 R .393(gister called EAX.)-.195 F .393
(The least signi\214cant 16 bits of that re)6.893 F .392
(gister are called AX.)-.195 F(It)6.892 E .162
(is possible to refer to the least signi\214cant byte as AL and the ne)
33.336 246 R .162(xt most signi\214cant byte as)-.195 F 5.264(AH. In)
33.336 261 R 2.013(the 64-bit X86-64 instruction set, the 64-bit v)5.264
F 2.013(ersion of EAX w)-.195 F 2.013(ould be called)-.13 F 3.25(RAX. W)
33.336 276 R 3.25(ew)-1.04 G(ill consider the 32-bit model.)-3.25 E .643
(The re)33.336 297 R .643(gister model of X86 is con)-.195 F -.26(vo)
-.52 G .644(luted and archaic, making ef).26 F .644(\214cient re)-.325 F
.644(gister allocation)-.195 F 4.683
(and instruction selection a challenge.)33.336 312 R 4.683(The follo)
11.183 F 4.683(wing general-purpose re)-.325 F 4.682(gisters are)-.195 F
(typically used for holding temporary v)33.336 327 Q
(alues, general inte)-.325 E(ger computation, etc.)-.195 E 3.25<8325>
33.336 342 S(eax: The "accumulator".)-3.25 E(Man)6.5 E 3.25(yi)-.195 G
(nstructions use %eax as an implied operand.)-3.25 E 3.25<8325>33.336
357 S(ebx: The "base re)-3.25 E
(gister" \(not to be confused with %ebp\).)-.195 E 3.25<8325>33.336 372
S(ecx: The "counter re)-3.25 E(gister".)-.195 E 3.25<8325>33.336 387 S
(edx: The "data re)-3.25 E(gister".)-.195 E 3.25<8325>33.336 402 S
(esi: Source re)-3.25 E(gister for string operations)-.195 E 3.25<8325>
33.336 417 S(edi: Destination re)-3.25 E(gister for string operations)
-.195 E(The follo)33.336 438 Q(wing special re)-.325 E
(gisters are used for control \215o)-.195 E(w:)-.325 E 4.753<8325>33.336
453 S 1.503(eip: The "instruction pointer", aka the Program Counter)
-4.753 F 8.003(.A)-.715 G 4.753(tt)-8.003 G 1.503
(he time of instruction)-4.753 F -.195(exe)33.336 468 S 2.385
(cution, %eip contains the address of the ne).195 F 2.385
(xt instruction to be fetched.)-.195 F 5.635(Ab)8.885 G(ranch)-5.635 E
1.961(instruction modi\214es %eip and causes the ne)33.336 483 R 1.961
(xt instruction to be fetched from that ne)-.195 F(w)-.325 E(address.)
33.336 498 Q 3.25<8325>33.336 513 S(esp: The stack pointer)-3.25 E(.)
-.715 E 3.366<8325>33.336 528 S .116(ebp: T)-3.366 F .115
(ypically used in the C / assembly language con)-1.04 F -.195(ve)-.52 G
.115(ntion for the stack frame "base).195 F 3.25(pointer". Aka)33.336
543 R(the "frame pointer".)3.25 E 5.466<8325>33.336 558 S 2.216
(e\215ags: The \215ags re)-5.466 F(gister)-.195 E 8.716(.I)-.715 G 5.466
(tc)-8.716 G 2.216(ontains the condition code \215ags \(carry)-5.466 F
5.466(,p)-.845 G(arity)-5.466 E 5.466(,B)-.845 G(CD)-5.466 E 1.69
(adjust, zero, signed, o)33.336 573 R -.195(ve)-.195 G(r\215o).195 E
1.69(w\) as well as a number of \215ags and control bits which are)-.325
F(generally used only by the operating system \(e.g. the Interupt Enabl\
e Flag\).)33.336 588 Q .999
(The X86 addressing scheme is based on an obsolete concept kno)33.336
609 R .999(wn as "se)-.325 F(gment/of)-.195 E(fset")-.325 E 6.556
(addressing. In)33.336 624 R 3.306
(all modern operating systems, program addresses are linear)6.556 F
6.555(,a)-.52 G 3.305(nd the)-6.555 F(se)33.336 639 Q 1.536
(gmentation is basically ignored.)-.195 F 1.536(The re)8.036 F 1.536
(gister model contains the re)-.195 F 1.537(gisters %cs, %ds,)-.195 F
1.102(%ss which are initialized by the operating system and should not \
be touched.)33.336 654 R(The)7.602 E 4.352(ya)-.195 G(re)-4.352 E 1.677
(what enable code, data and stack accesses to w)33.336 669 R 4.927
(ork. Additional)-.13 F(se)4.927 E 1.677(gment re)-.195 F 1.677
(gisters %es,)-.195 F 1.037(%fs and %gs are general-purpose and, becaus\
e a linear addressing model is being used,)33.336 684 R .425
(could be emplo)33.336 699 R .426(yed as general-purpose scratch re)-.13
F .426(gisters, subject to some restrictions as to)-.195 F 3.116
(which re)33.336 714 R 3.116(gisters may appear in which instructions.)
-.195 F(Ho)9.616 E(we)-.325 E -.195(ve)-.325 G 4.156 -.52(r, b).195 H
3.115(oth the %fs and %gs).52 F(re)33.336 729 Q 3.586
(gisters are used by the operating system and the standard library)-.195
F 6.836(,a)-.845 G 3.586(nd should be)-6.836 F -.26(avo)33.336 744 S
(ided.).26 E 0 Cg EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 19)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 1.844(There are man)33.336 120 R 5.094(ya)-.195 G
1.844(dditional re)-5.094 F 1.843(gisters in the X86 model, b)-.195 F
1.843(ut the)-.26 F 5.093(ya)-.195 G 1.843(re either used by the)-5.093
F 4.918(operating system only)33.336 135 R 8.168(,o)-.845 G 8.168(ra)
-8.168 G 4.918(re for instructions that are be)-8.168 F 4.918
(yond the scope of this)-.195 F
(introduction, such as \215oating point, MMX, and SSE instructions.)
33.336 150 Q(On X86-64, there are additional general-purpose re)33.336
171 Q(gisters)-.195 E/F2 13/Courier@0 SF(%r8 - %r15)3.25 E F1(.)A/F3 13
/Times-Bold@0 SF(Addr)215.992 231 Q(essing Modes)-.234 E F1 .955(There \
are a number of addressing modes which are used to specify where to \
\214nd or put)33.336 267 R(the operands of an instruction:)33.336 282 Q
3.25<8352>33.336 297 S -.195(eg)-3.25 G(ister Direct: Specify the re)
.195 E(gister name with a % pre\214x, e.g. %eax.)-.195 E 3.25<8349>
33.336 312 S(mmediate: The immediate v)-3.25 E(alue must be pre\214x)
-.325 E(ed with the dollar sign, e.g. $1)-.195 E 5.099<834d>33.336 327 S
1.849(emory Absolute: The absolute address of the operand is speci\214e\
d without a pre\214x)-5.099 F(qualifer)33.336 342 Q 6.714(.E)-.715 G
(.g.)-6.714 E F2 .214(movl $1,y)3.464 F F1(mo)3.464 E -.195(ve)-.195 G
3.464(st).195 G .214(he immediate v)-3.464 F .214
(alue 1 into the memory address which)-.325 F
(is associated with the link)33.336 357 Q(er symbol y)-.13 E(.)-.845 E
3.625<8342>33.336 372 S(ase-inde)-3.625 E .375
(x: The X86 has a handy mode for accessing elements of an array)-.195 F
6.876(.T)-.845 G .376(he syntax)-6.876 F(is)33.336 387 Q F2
(disp\(%base,%index,scale\))7.032 E F1 7.032(.T)7.032 G 3.782
(he address of the operand is computed as)-7.032 F F2
(addr=base+index*scale+disp)33.336 402 Q F1 7.788(.T)C 1.288
(he base and inde)-7.788 F 4.538(xm)-.195 G 1.288(ay be an)-4.538 F
4.539(yo)-.195 G 4.539(ft)-4.539 G 1.289(he general-)-4.539 F 1.138
(purpose re)33.336 417 R 1.138
(gisters \(eax, ebx, ecx, edx, ebp, dsi, edi, esp \(not allo)-.195 F
1.138(wed as the inde)-.325 F 1.137(x\)\). The)-.195 F .501
(displacement is a 32-bit absolute address.)33.336 432 R .501
(The scale f)7.001 F .501(actor may be 1, 2, 4 or 8.)-.13 F .501
(Some of)7.001 F 1.665
(these parameters may be ommitted, forming simpler addressing modes.)
33.336 447 R 1.665(E.g. in)8.165 F F2(movl)8.165 E 1.204($1, \(%eax\))
33.336 462 R F1 1.204(the eax re)4.454 F 1.204
(gister contains a pointer to a memory location, into which the)-.195 F
(immediate v)33.336 477 Q(alue 1 is mo)-.325 E -.195(ve)-.195 G(d.).195
E .858(X86/64 is generally a 2-address architecture, meaning that one o\
f the operands is both a)33.336 498 R 2.815(source and a destination.)
33.336 513 R 2.815(There are man)9.315 F 6.065(yc)-.195 G 2.815
(ombinations of src/dst addressing modes)-6.065 F 10.563
(including some odd restrictions.)33.336 528 R 10.562
(Generally speaking, most opcodes allo)17.063 F(w)-.325 E(re)33.336 543
Q(gister/re)-.195 E(gister)-.195 E 21.284(,r)-.52 G -.195(eg)-21.284 G
18.034(ister/immediate, re).195 F 18.034
(gister/memory or immediate/memory)-.195 F 3.25
(combinations. Memory/memory)33.336 558 R(is generally not allo)3.25 E
(wed.)-.325 E F3(Function Calling Con)187.119 579 Q -.13(ve)-.52 G
(ntion).13 E F1 2.533 -1.04(We w)33.336 615 T .453
(ill discuss what the Intel documentation calls the CDECL con)1.04 F
-.195(ve)-.52 G .452(ntion for procedure).195 F .577
(calling, as that is what is used in the C/UNIX w)33.336 630 R 3.827
(orld. Other)-.13 F .578(calling con)3.827 F -.195(ve)-.52 G .578
(ntions do e).195 F(xist.)-.195 E 1.159
(In the X86/UNIX architecture, all ar)33.336 645 R 1.159
(guments to a function are pushed on the stack, and)-.234 F .266
(the return v)33.336 660 R .267(alue is returned in the %eax re)-.325 F
(gister)-.195 E 6.767(.I)-.715 G 3.517(ft)-6.767 G .267(he return v)
-3.517 F .267(alue is 64 bits \(long long\),)-.325 F .258
(it is returned in the re)33.336 675 R .257
(gister pair %edx:%eax, with the %edx being the most signi\214cant 32)
-.195 F 3.264(bits. Floating)33.336 690 R .014(point return v)3.264 F
.014(alues are returned in the \215oating point re)-.325 F .014
(gisters \(\215oating point)-.195 F 3.919
(operations are not discussed in these notes\).)33.336 705 R 3.918
(Returning a struct requires a special)10.418 F(con)33.336 720 Q -.195
(ve)-.52 G(ntion, discussed belo).195 E -.845(w.)-.325 G 2.064
(Recall that %esp is the stack pointer)33.336 741 R 5.314(,a)-.52 G
2.064(nd the stack gro)-5.314 F 2.064(ws to)-.325 F -.13(wa)-.325 G
2.065(rds lo).13 F 5.315(wm)-.325 G(emory)-5.315 E 8.565(.T)-.845 G(he)
-8.565 E 0 Cg EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 20)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 3.399
(PUSH instruction predecrements the stack pointer)33.336 120 R 6.649(,t)
-.52 G 3.399(hen writes the v)-6.649 F 3.399(alue to \(%esp\).)-.325 F
(Lik)33.336 135 Q -.325(ew)-.13 G 1.538
(ise, POP reads from \(%esp\) and then postincrements %esp.).325 F(Ar)
8.039 E 1.539(guments in C are)-.234 F 3.527
(pushed to the stack in right-to-left order)33.336 150 R 10.026(.T)-.715
G 3.526(herefore, just before issuing the CALL)-10.026 F 2.433
(instruction, the leftmost ar)33.336 165 R 2.433
(gument is on the top of the stack.)-.234 F 2.433(This con)8.933 F -.195
(ve)-.52 G 2.433(ntion allo).195 F(ws)-.325 E -.325(va)33.336 180 S
1.849(riadic functions to w).325 F 1.849(ork properly)-.13 F 8.349(.T)
-.845 G 1.849(he callee does not need to kno)-8.349 F 5.098(wi)-.325 G
5.098(na)-5.098 G(dv)-5.098 E 1.848(ance \(at)-.325 F .477
(compile time\) the e)33.336 195 R .477(xact number of ar)-.195 F .478
(guments which will be pushed.)-.234 F .478(It is able to retrie)6.978 F
-.195(ve)-.325 G(the ar)33.336 210 Q(guments left-to-right by positi)
-.234 E .39 -.195(ve o)-.325 H -.325(ff).195 G(sets from %esp.).325 E
2.53(The CALL instruction pushes the v)33.336 231 R 2.529
(alue of %eip, thus on entry to a function \(%esp\))-.325 F .698(contai\
ns the address of the instruction to which control should return \(i.e.\
 the instruction)33.336 246 R .964(after the CALL\).)33.336 261 R .964
(The \214rst thing an)7.464 F 4.214(yf)-.195 G .963
(unction does is set up its local stack frame.)-4.214 F(Let')7.463 E(s)
-.715 E(look at an e)33.336 276 Q(xample:)-.195 E/F2 8/Courier@0 SF 1.2
(f1\(\))33.936 288 S({)33.936 300 Q 1.2(f2\(2\);)81.936 312 S(})33.936
324 Q 1.2(f2\(int b\))33.936 348 S({)33.936 360 Q 1.2(int a;)33.936 372
S 1.2(a++;)81.936 384 S 1.2(b--;)81.936 396 S 1.2(return 1;)81.936 408 S
(})33.936 420 Q 1.2(f1:)33.936 447 S 12 1.2(pushl %ebp)81.936 459 T 18
1.2(movl %esp,)81.936 471 T 1.2(%ebp)6 G 18 1.2(subl $8,)81.936 483 T 90
1.2(%esp !one)6 H 1.2(arg slot + one padding slot)6 G 18 1.2(movl $2,)
81.936 495 T 78 1.2(\(%esp\) !put)6 H 1.2(arg onto stack)6 G 18 1.2
(call f2)81.936 507 T 1.2(leave)81.936 519 S 1.2(ret)81.936 531 S 1.2
(f2:)33.936 555 S 12 1.2(pushl %ebp)81.936 567 T 18 1.2(movl %esp,)
81.936 579 T 1.2(%ebp)6 G 18 1.2(subl $16,)81.936 591 T 84 1.2
(%esp !extra)6 H 1.2(space for alignment)6 G 18 1.2(incl -4\(%ebp\))
81.936 603 T 1.2(!access local var a)96 G 18 1.2(decl 8\(%ebp\))81.936
615 T 1.2(!access param b)102 G 18 1.2(movl $1,%eax)81.936 627 T 1.2
(!return value)102 G 1.2(leave)81.936 639 S 1.2(ret)81.936 651 S F1 .048
(The %ebp re)33.336 672 R .048(gister is the frame pointer)-.195 F 3.299
(,a)-.52 G .049(nd will be used to access both local v)-3.299 F .049
(ariables and)-.325 F 3.461(parameters. Its)33.336 687 R -.325(va)3.461
G .211(lue must be preserv).325 F .21(ed so the \214rst action is to sa)
-.195 F .6 -.195(ve i)-.26 H 3.46(to).195 G 3.46(nt)-3.46 G .21
(he stack.)-3.46 F(Then)6.71 E 2.604
(the stack pointer is decremented to create room for local v)33.336 702
R 5.854(ariables. In)-.325 F 2.604(our e)5.854 F(xample,)-.195 E .235
(function g has one local v)33.336 717 R .235(ariable which tak)-.325 F
.235(es up 4 bytes.)-.13 F .235(The %ebp contains the v)6.735 F .234
(alue of)-.325 F 2.029(the stack pointer after sa)33.336 732 R 2.029
(ving the old %ebp.)-.26 F 2.029
(Therefore 4\(%ebp\) is the return address,)8.529 F 0 Cg EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 21)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 2.247(\(%ebp\) is the sa)33.336 120 R -.195(ve)-.26
G 5.496(d%).195 G 2.246(ebp, and the \214rst parameter is 8\(%ebp\).)
-5.496 F -.195(Pa)8.746 G 2.246(rameters will be at).195 F(positi)33.336
135 Q 2.994 -.195(ve o)-.325 H -.325(ff).195 G 2.604
(sets from %ebp and local v).325 F 2.604(ariables will be at ne)-.325 F
-.065(ga)-.195 G(ti).065 E 2.995 -.195(ve o)-.325 H -.325(ff).195 G
5.855(sets. Generally).325 F 1.311(speaking, the local v)33.336 150 R
1.311(ariables mentioned \214rst in a function will ha)-.325 F 1.701
-.195(ve t)-.26 H 1.311(he lo).195 F 1.311(west memory)-.325 F
(address \(i.e. highest ne)33.336 165 Q -.065(ga)-.195 G(ti).065 E .39
-.195(ve o)-.325 H -.325(ff).195 G(set from %ebp\), b).325 E
(ut that beha)-.26 E(vior is not guaranteed.)-.26 E .176
(When a function call is made, ar)33.336 186 R .177
(guments can be pushed on the stack in right-to-left order)-.234 F(,)
-.52 E .071(using the)33.336 201 R/F2 13/Courier@0 SF -1.8(pushl)2.421 G
F1 3.321(instruction. After)4.221 F(the)3.321 E F2 -1.8(CALL)2.421 G F1
.071(instruction, an)4.221 F F2 .07 -1.8(addl $X,%esp)2.421 H F1 -.13
(wo)4.22 G .07(uld be needed).13 F 1.202
(to adjust the stack pointer and re)33.336 216 R -.195(ve)-.325 G 1.202
(rse the ef).195 F 1.202(fects of the pre)-.325 F 1.202(vious pushes.)
-.325 F(Alternati)7.702 E -.195(ve)-.325 G(ly).195 E(,)-.845 E 2.6(one \
could determine during code generation which function call \(within the\
 function)33.336 231 R 3.637
(being generated\) has the highest number of ar)33.336 246 R 6.887
(guments. The)-.234 F 3.637(number of bytes thus)6.887 F .18
(required for passing ar)33.336 261 R .179
(guments can be added to the total local stack frame size, as if these)
-.234 F("ar)33.336 276 Q .156(gument slots" were hidden local v)-.234 F
3.406(ariables. Then)-.325 F .156(the ar)3.406 F .156
(guments can be passed via)-.234 F F2 -1.8(movl)2.506 G -1.8
(OFFSET\(%esp\))32.436 291 S F1 4.03(,i).9 G 4.03(na)-4.03 G 1.17 -.195
(ny o)-4.03 H .78
(rder desired, and there is no need to adjust the stack pointer after)
.195 F(the call.)33.336 306 Q(This is the approach that gcc tak)6.5 E
(es.)-.13 E .484(Upon lea)33.336 327 R .484(ving a function, the LEA)
-.26 F .484(VE instruction is used, which performs tw)-1.755 F 3.735(oo)
-.13 G(perations:)-3.735 E .748(%ebp is mo)33.336 342 R -.195(ve)-.195 G
3.998(di).195 G .748
(nto %esp, thus restoring the stack pointer to its v)-3.998 F .747
(alue just after the base)-.325 F .984(pointer sa)33.336 357 R 1.374
-.195(ve o)-.26 H 4.234(ne).195 G(ntry)-4.234 E 4.234(,t)-.845 G .984
(hen %ebp is popped from the stack.)-4.234 F(No)7.485 E 4.235(we)-.325 G
-.195(ve)-4.56 G .985(rything is restored,).195 F .549(and the RET inst\
ruction pops the return address from the stack and resumes e)33.336 372
R -.195(xe)-.195 G .548(cution in).195 F(the caller)33.336 387 Q(.)-.715
E .362(If the compiler chose to use an)33.336 408 R 3.612(yr)-.195 G
-.195(eg)-3.612 G .362(isters which are callee-sa).195 F -.195(ve)-.26 G
.362(s, we w).195 F .363(ould see pushes of)-.13 F(those re)33.336 423 Q
(gisters on entry and corresponding pops on e)-.195 E(xit.)-.195 E 0 Cg
EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 22)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E 0 0
468 498 -507.47 540 33.336 627.47 PBEGIN
%%BeginDocument: x86stack.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: x86stack.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Mon Dec  1 01:28:12 2008
%%For: hak@lex ()
%%BoundingBox: 0 0 498 540
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 540 moveto 0 0 lineto 498 0 lineto 498 540 lineto closepath clip newpath
-81.0 571.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 2400 900 m 4200 900 l 4200 1500 l 2400 1500 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 1050 m
 4200 1050 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 1200 m
 4200 1200 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 1350 m
 4200 1350 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 1500 m 4200 1500 l 4200 2100 l 2400 2100 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 1650 m
 4200 1650 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 1800 m
 4200 1800 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 1950 m
 4200 1950 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 2100 m 4200 2100 l 4200 2700 l 2400 2700 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 2250 m
 4200 2250 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 2400 m
 4200 2400 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 2550 m
 4200 2550 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 2700 m 4200 2700 l 4200 3300 l 2400 3300 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 2850 m
 4200 2850 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 3000 m
 4200 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 3150 m
 4200 3150 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 3300 m 4200 3300 l 4200 3900 l 2400 3900 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 3450 m
 4200 3450 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 3600 m
 4200 3600 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 3750 m
 4200 3750 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 3900 m 4200 3900 l 4200 4500 l 2400 4500 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 4050 m
 4200 4050 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 4200 m
 4200 4200 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 4350 m
 4200 4350 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 4500 m 4200 4500 l 4200 5100 l 2400 5100 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 4650 m
 4200 4650 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 4800 m
 4200 4800 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 4950 m
 4200 4950 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 5100 m 4200 5100 l 4200 5700 l 2400 5700 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 5250 m
 4200 5250 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 5400 m
 4200 5400 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 5550 m
 4200 5550 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 5700 m 4200 5700 l 4200 6300 l 2400 6300 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 5850 m
 4200 5850 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 6000 m
 4200 6000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 6150 m
 4200 6150 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 6300 m 4200 6300 l 4200 6900 l 2400 6900 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 6450 m
 4200 6450 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 6600 m
 4200 6600 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 6750 m
 4200 6750 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 6900 m 4200 6900 l 4200 7500 l 2400 7500 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 7050 m
 4200 7050 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 7200 m
 4200 7200 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 7350 m
 4200 7350 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 7500 m 4200 7500 l 4200 8100 l 2400 8100 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 7650 m
 4200 7650 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 7800 m
 4200 7800 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 7950 m
 4200 7950 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 8100 m 4200 8100 l 4200 8700 l 2400 8700 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 8250 m
 4200 8250 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 8400 m
 4200 8400 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 8550 m
 4200 8550 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 8700 m 4200 8700 l 4200 9300 l 2400 9300 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 8850 m
 4200 8850 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 9000 m
 4200 9000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 9150 m
 4200 9150 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
4260 6345 m 4260 6405 l 4412 6405 l 4292 6375 l 4412 6345 l cp
eoclip
n 5250 6375 m
 4275 6375 l gs col0 s gr gr

% arrowhead
n 4412 6345 m 4292 6375 l 4412 6405 l  col0 s
% Polyline
n 2250 2775 m 2025 3150 l 2025 4725 l 1950 4875 l 2025 5100 l 2025 7050 l

 2175 7350 l gs col0 s gr 
% Polyline
gs  clippath
4260 2745 m 4260 2805 l 4412 2805 l 4292 2775 l 4412 2745 l cp
eoclip
n 5250 2775 m
 4275 2775 l gs col0 s gr gr

% arrowhead
n 4412 2745 m 4292 2775 l 4412 2805 l  col0 s
% Polyline
gs  clippath
4255 4097 m 4264 4156 l 4414 4132 l 4291 4122 l 4404 4073 l cp
eoclip
n 5700 3900 m
 4275 4125 l gs col0 s gr gr

% arrowhead
n 4404 4073 m 4291 4122 l 4414 4132 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
4260 7470 m 4260 7530 l 4412 7530 l 4292 7500 l 4412 7470 l cp
eoclip
n 5250 7500 m
 4275 7500 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 4412 7470 m 4292 7500 l 4412 7530 l  col0 s
/Times-Roman ff 200.00 scf sf
2775 675 m
gs 1 -1 sc (LOW MEMORY) col0 sh gr
/Times-Roman ff 200.00 scf sf
2700 9525 m
gs 1 -1 sc (HIGH MEMORY) col0 sh gr
/Times-Bold ff 233.33 scf sf
3000 8325 m
gs 1 -1 sc  345.0 rot (arg2) col0 sh gr
/Times-Bold ff 233.33 scf sf
2925 8925 m
gs 1 -1 sc  345.0 rot (arg3) col0 sh gr
/Times-Bold ff 233.33 scf sf
3000 7725 m
gs 1 -1 sc  345.0 rot (arg1) col0 sh gr
/Times-Bold ff 233.33 scf sf
3000 7050 m
gs 1 -1 sc  345.0 rot (return) col0 sh gr
/Times-Bold ff 233.33 scf sf
2925 7275 m
gs 1 -1 sc  345.0 rot (address) col0 sh gr
/Times-Bold ff 233.33 scf sf
3075 6450 m
gs 1 -1 sc  345.0 rot (saved) col0 sh gr
/Times-Bold ff 233.33 scf sf
2997 6740 m
gs 1 -1 sc  345.0 rot (%ebp) col0 sh gr
/Times-Bold ff 233.33 scf sf
3150 5925 m
gs 1 -1 sc  345.0 rot (c) col0 sh gr
/Times-Bold ff 233.33 scf sf
3150 5325 m
gs 1 -1 sc  345.0 rot (b) col0 sh gr
/Times-Bold ff 233.33 scf sf
3150 4725 m
gs 1 -1 sc  345.0 rot (a) col0 sh gr
/Times-Bold ff 233.33 scf sf
2775 4200 m
gs 1 -1 sc  345.0 rot (padding) col0 sh gr
/Times-Roman ff 233.33 scf sf
5400 6375 m
gs 1 -1 sc (%ebp) col0 sh gr
/Times-Bold ff 233.33 scf sf
2700 3600 m
gs 1 -1 sc  345.0 rot (arg slot 2) col0 sh gr
/Times-Bold ff 233.33 scf sf
2700 3000 m
gs 1 -1 sc  345.0 rot (arg slot 1) col0 sh gr
/Times-Roman ff 233.33 scf sf
5400 2850 m
gs 1 -1 sc (%esp) col0 sh gr
/Times-Roman ff 233.33 scf sf
1350 5400 m
gs 1 -1 sc (g\(\)) col0 sh gr
/Times-Roman ff 233.33 scf sf
1350 5025 m
gs 1 -1 sc (for) col0 sh gr
/Times-Roman ff 233.33 scf sf
1350 4575 m
gs 1 -1 sc (frame) col0 sh gr
/Times-Roman ff 233.33 scf sf
1350 4200 m
gs 1 -1 sc (stack) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 3825 m
gs 1 -1 sc (If additional space were needed) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 4110 m
gs 1 -1 sc (for more local variables or temp) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 4395 m
gs 1 -1 sc (values, they would be allocated in) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 4680 m
gs 1 -1 sc (here, with padding necessary to bring) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 4965 m
gs 1 -1 sc (the total stack frame size to a multiple) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 5250 m
gs 1 -1 sc (of 16.) col0 sh gr
/Times-Roman ff 233.33 scf sf
7050 7125 m
gs 1 -1 sc (f\(\)) col0 sh gr
/Times-Roman ff 233.33 scf sf
7050 7410 m
gs 1 -1 sc ({) col0 sh gr
/Times-Roman ff 233.33 scf sf
7350 7575 m
gs 1 -1 sc (/*...*/) col0 sh gr
/Times-Roman ff 233.33 scf sf
7350 7860 m
gs 1 -1 sc (g\(arg1,arg2,arg3\);) col0 sh gr
/Times-Roman ff 233.33 scf sf
7350 8145 m
gs 1 -1 sc (/*...*/) col0 sh gr
/Times-Roman ff 233.33 scf sf
7050 8325 m
gs 1 -1 sc (}) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 1650 m
gs 1 -1 sc (g\(x,y,z\)) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 1935 m
gs 1 -1 sc ({) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 2220 m
gs 1 -1 sc ( int a,b,c;) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 2505 m
gs 1 -1 sc ( /*...*/) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 2790 m
gs 1 -1 sc (    z\(1,2\);) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 3075 m
gs 1 -1 sc ( .*...*.) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 3360 m
gs 1 -1 sc (}) col0 sh gr
/Times-Roman ff 233.33 scf sf
5250 3000 m
gs 1 -1 sc (\(during exec) col0 sh gr
/Times-Roman ff 233.33 scf sf
5250 3285 m
gs 1 -1 sc ( of fn. g\)) col0 sh gr
/Times-Roman ff 233.33 scf sf
5475 6675 m
gs 1 -1 sc (\(during exec. of fn. g\)) col0 sh gr
/Times-Roman ff 233.33 scf sf
5400 7500 m
gs 1 -1 sc (%esp just) col0 sh gr
/Times-Roman ff 233.33 scf sf
5400 7785 m
gs 1 -1 sc (before calling) col0 sh gr
/Times-Roman ff 233.33 scf sf
5400 8070 m
gs 1 -1 sc (fn. g) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF .942
(Note that classic C widened char and short before passing.)33.336
654.47 R .942(C89/C99 does not do this if)7.442 F .084
(there is a prototype for the called function, e.g. v)33.336 669.47 R
.085(oid f\(char)-.26 F 3.335(,char\). Ho)-.52 F(we)-.325 E -.195(ve)
-.325 G 1.125 -.52(r, t).195 H .085(he caller still).52 F .122
(passes the ar)33.336 684.47 R .122(guments as 32 bit v)-.234 F .121
(alues, with the more signi\214cant bits zeroed \(for unsigned\))-.325 F
(or sign-e)33.336 699.47 Q 3.25(xtended. Floats)-.195 F
(are passed as 32-bit, doubles are 64-bit.)3.25 E .074
(When passing whole structs as ar)33.336 720.47 R .074(guments, the)
-.234 F 3.324(ya)-.195 G .074(re pushed onto the stack in re)-3.324 F
-.195(ve)-.325 G .075(rse order).195 F(.)-.715 E(So:)33.336 735.47 Q 0
Cg EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 23)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(struct s {int a,b;} s1;)39.336 117 Q(fn\(s1\);)39.336
141 Q/F2 13/Times-Roman@0 SF(is the same as)33.336 171 Q F1
(fn\(s1.b,s1.a\);)33.336 183 Q F2 1.101
(Since the leftmost parameter winds up at the lo)33.336 204 R 1.101
(west memory address, this preserv)-.325 F 1.101(es the)-.195 F(address\
ability of the entire structure on the stack in the correct order)33.336
219 Q(.)-.715 E .57(If a function returns a structure, the CALLER must \
allocate an area on its stack frame to)33.336 240 R .386
(hold the return v)33.336 255 R 3.636(alue. Then)-.325 F .386
(it passes a hidden \214rst parameter which is the address of this)3.636
F(area.)33.336 270 Q F1(struct s *g\(\))45.336 282 Q({)45.336 294 Q(})
45.336 318 Q(s1=g\(\);)45.336 342 Q F2(is the same as)33.336 357 Q F1
(struct s temp;)45.336 369 Q(g\(&temp\);)90.936 381 Q/F3 13/Times-Bold@0
SF(X86-64 Function Calling)199.079 411 Q F2 .877
(Under the 64 bit architecture, the \214rst 6 inte)33.336 447 R .878
(ger ar)-.195 F .878(guments are passed in re)-.234 F .878
(gisters, rather)-.195 F 2.012(than on the stack.)33.336 462 R(Ar)8.512
E 2.012(guments are placed in left-to-right order in re)-.234 F 2.012
(gisters %rdi, %rsi,)-.195 F .349(%rdx, %rcx, %r8, %r9.)33.336 477 R
.349(If there are additional ar)6.849 F .349(guments, the)-.234 F 3.599
(ya)-.195 G .35(re put on the stack right-)-3.599 F .253
(to-left, i.e. with the right-most ar)33.336 492 R .253
(gument at the highest memory address, just lik)-.234 F 3.503(eX)-.13 G
(86-32.)-3.503 E .067(If structs are passed as ar)33.336 507 R .067
(guments, the)-.234 F 3.318(ya)-.195 G .068(re al)-3.318 F -.13(wa)-.13
G .068(ys placed on the stack.).13 F .068(The inte)6.568 F .068
(ger return)-.195 F -.325(va)33.336 522 S(lue is in the %rax re).325 E
(gister)-.195 E(.)-.715 E 1.404(This h)33.336 543 R 1.404(ybrid re)-.065
F 1.404(gister/memory ar)-.195 F 1.404
(gument passing model introduces some comple)-.234 F 1.404(xity with)
-.195 F -.325(va)33.336 558 S(riadic functions, aka).325 E/F4 13
/Courier@0 SF -1.8(<stdarg.h>)2.35 G F2 6.5(.G).9 G(CC implements)-6.5 E
F4 -1.8(stdarg)2.35 G F2(as a compiler b)4.15 E(uilt-in.)-.26 E F3
(X86-64 Global V)199.32 588 Q(ariables)-1.196 E F2 .672(There is an odd\
 limitation in the X86-64 instruction set: the absolute addressing mode\
 is)33.336 624 R 2.79(not supported for 64-bit addresses.)33.336 639 R
4.87 -1.04(To a)9.29 H 2.789(ccess a memory operand, a re)1.04 F 2.789
(gister indirect)-.195 F(addressing mode must be used.)33.336 654 Q F1
(extern int i;)33.336 666 Q(f\(\))33.336 690 Q({)33.336 702 Q(i=2;)
90.936 714 Q(})33.336 726 Q 0 Cg EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 24)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(f:)33.336 117 Q 12(pushq %rbp)81.336 129 R
(#Prologue, save base pointer)168 E 18(movq %rsp,)81.336 141 R 68.4
(%rbp #Set)6 F(new base pointer)6 E 27.6(subq $32,)90.936 153 R 55.2
(%rsp #Create)6 F(stack frame)6 E 18(movl $2,)81.336 165 R 62.4
(i\(%rip\) #Program)6 F(Counter Relative mode)6 E(leave)81.336 177 Q
(ret)81.336 189 Q/F2 13/Times-Roman@0 SF .267
(There will be a 32-bit "hole" in the)33.336 222 R/F3 13/Courier@0 SF
-1.8(movl)2.617 G F2 .267(opcode which will be a program counter relati)
4.417 F -.195(ve)-.325 G .667(relocation type \(similar to the e)33.336
237 R .666(xample of the CALL opcode earlier in this unit\).)-.195 F
.666(At link)7.166 F .586
(time, when the address of symbol i has been resolv)33.336 252 R .587
(ed, this hole will be \214lled with the i')-.195 F(s)-.715 E
(address, minus the address of the hole itself.)33.336 267 Q .321
(This introduces a limitation that code and data must f)33.336 288 R .32
(all within the same contiguous 2GB)-.13 F .288(memory re)33.336 303 R
.289
(gion at run time, which the X64-64 spec calls a "medium" memory model.)
-.195 F -1.04(To)6.789 G 2.118(use a "lar)33.336 318 R 2.117
(ge" memory model where code and data may be an)-.234 F 2.117
(yplace within the 64-bit)-.195 F(address space, dif)33.336 333 Q
(ferent opcodes are used:)-.325 E F1 9.6(movabsq $i,)90.936 345 R 61.2
(%rax #Move)6 F(64 bit immediate value to rax)6 E 18(movl $2,)81.336 357
R 68.4(\(%rax\) #Register)6 F(indirect)6 E/F4 13/Times-Bold@0 SF
(Caller/Callee sa)215.03 402 Q -.13(ve)-.325 G(s).13 E F2 1.776
(It is the case for an)33.336 438 R 5.027(ya)-.195 G 1.777
(rchitecture and operating system that there is a function calling)
-5.027 F("con)33.336 453 Q -.195(ve)-.52 G 1.046
(ntion" which speci\214es ho).195 F 4.296(wa)-.325 G -.234(rg)-4.296 G
1.046(uments are passed and returned, and ho).234 F 4.295(wr)-.325 G
-.195(eg)-4.295 G(isters).195 E 1.412(may be used.)33.336 468 R 1.412
(This con)7.912 F -.195(ve)-.52 G 1.412(ntion dictates which of the re)
.195 F 1.413(gisters are e)-.195 F 1.413(xpected to survi)-.195 F 1.803
-.195(ve a)-.325 H 3.125
(function call, and which ones may be used as "scratch" re)33.336 483 R
3.125(gisters, and are therefore)-.195 F -.195(ex)33.336 498 S 2.214
(pected to be v).195 F 2.214(olatile across function calls.)-.26 F 2.215
(Another w)8.715 F 2.215(ay of saying this is there are)-.13 F(caller)
33.336 513 Q(-sa)-.26 E -.195(ve)-.26 G 4.593(dr).195 G -.195(eg)-4.593
G 1.343(isters \(the scratch re).195 F 4.593(gisters.. if)-.195 F 1.343
(the caller w)4.593 F 1.343(ants to k)-.13 F 1.342(eep a v)-.13 F 1.342
(alue in there)-.325 F .769(through a function call it must e)33.336 528
R .769(xplicitly sa)-.195 F 1.159 -.195(ve i)-.26 H .769
(t\) and callee-sa).195 F -.195(ve)-.26 G 4.019(dr).195 G -.195(eg)
-4.019 G .769(isters \(if a function).195 F -.13(wa)33.336 543 S .55
(nts to use one of these re).13 F .55(gisters it must e)-.195 F .55
(xplicitly sa)-.195 F .94 -.195(ve i)-.26 H 3.8(to).195 G 3.8(ne)-3.8 G
.549(ntry and restore it before)-3.8 F(returning\).)33.336 558 Q 2.855
(In the X86 architecture under UNIX, the %eax,%ecx,and %edx re)33.336
579 R 2.856(gisters are scratch)-.195 F(re)33.336 594 Q .777
(gisters \(caller)-.195 F(-sa)-.26 E -.195(ve)-.26 G 4.027(s\). Y).195 F
.777(ou will \214nd that the compiler tends to put short-li)-1.43 F
-.195(ve)-.325 G 4.027(dv).195 G .777(alues in)-4.352 F 2.782(these re)
33.336 609 R 6.032(gisters. Of)-.195 F 2.782(course the %e\215ags re)
6.032 F 2.782(gister is also e)-.195 F 2.782
(xpected to be modi\214ed by a)-.195 F 2.173(function call.)33.336 624 R
2.172(The %ebx,%edi,%esi and %es re)8.673 F 2.172(gisters are callee-sa)
-.195 F -.195(ve)-.26 G 5.422(d. The).195 F(compiler)5.422 E 1.863
(may use these for longer)33.336 639 R(-li)-.26 E -.195(ve)-.325 G 5.113
(dv).195 G 1.864(alues \(such as local v)-5.438 F 1.864
(ariables which are assigned to a)-.325 F(re)33.336 654 Q 2.93
(gister for all or part of the function to impro)-.195 F 3.319 -.195
(ve s)-.195 H 6.179(peed\). Ho).195 F(we)-.325 E -.195(ve)-.325 G 3.969
-.52(r, i).195 H 6.179(fo).52 G 2.929(ne of these)-6.179 F(re)33.336 669
Q .931(gisters is used by the compiler)-.195 F 4.181(,i)-.52 G 4.181(tm)
-4.181 G .931(ust emit code to push it on the stack on entry)-4.181 F
4.181(,a)-.845 G(nd)-4.181 E(pop it on return.)33.336 684 Q 4.918
(On X86-64, the caller)33.336 705 R(-sa)-.26 E 5.307 -.195(ve \()-.26 H
4.917(scratch\) re).195 F 4.917
(gisters are %rax,%rcx,%rdx,%rsi,%rdi, and)-.195 F 1.162
(%r8-%r11, while the callee-sa)33.336 720 R 1.552 -.195(ve \()-.26 H
1.162(long-term\) re).195 F 1.162(gisters are %ebx, %r12-%r15.)-.195 F
1.163(Note that)7.663 F .485(%rsi and %rdi are caller)33.336 735 R(-sa)
-.26 E .875 -.195(ve o)-.26 H 3.735(n6).195 G 3.735(4b)-3.735 G .484
(it, whereas the)-3.735 F 3.734(yw)-.195 G .484(ere callee-sa)-3.734 F
.874 -.195(ve o)-.26 H 3.734(n3).195 G 3.734(2-bit. This)-3.734 F(is)
3.734 E 0 Cg EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 25)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(because the)33.336 120 Q 3.25(ya)-.195 G
(re used for ar)-3.25 E(gument passing on 64 bit.)-.234 E/F2 13
/Times-Bold@0 SF(X86 Alignment)225.268 150 Q F1 .946(The X86/X86-64 arc\
hitecture does not generally impose alignment restrictions on either)
33.336 186 R 3.335(instruction or data fetches \(in f)33.336 201 R 3.335
(act, with single-byte opcodes, instructions are rarely)-.13 F 4.266
(aligned\). The)33.336 216 R 1.017(processor will simply handle misalig\
ned accesses by performing multiple)4.266 F 1.677
(fetches from memory and shifting the bits around.)33.336 231 R(Ho)8.177
E(we)-.325 E -.195(ve)-.325 G 2.717 -.52(r, f).195 H 1.677
(or performance reasons,).52 F .204
(the compiler aligns fundamental data types on 4-byte boundaries \(e)
33.336 246 R .204(xcept for shorts which)-.195 F
(are aligned on 2, and chars which are unaligned\).)33.336 261 Q .903
(GCC on the X86 architecture k)33.336 282 R .902
(eeps the stack frame aligned on a 16-byte boundary)-.13 F 7.402(.I)
-.845 G(.e.)-7.402 E .376(during the e)33.336 297 R -.195(xe)-.195 G
.377(cution of a function,).195 F/F3 13/Courier@0 SF -1.8(%esp)2.727 G
F1 .377(is a multiple of 16.)4.527 F .377(On entry to the function, the)
6.877 F .937(compiler emits code to create enough stack frame area not \
only for local and temporary)33.336 312 R -.325(va)33.336 327 S 1.25
(riables, b).325 F 1.25(ut also for passing ar)-.26 F 1.25
(guments to an)-.234 F 4.5(yf)-.195 G 1.25
(unctions which are called from within)-4.5 F .478(the function in ques\
tion, plus padding if necessary to bring the total stack frame size to \
a)33.336 342 R .751(multiple of 16.)33.336 357 R .752
(The compiler then uses)7.251 F F3 .752 -1.8(movl ARG,SLOT\(%esp\))3.102
H F1 .752(to place the ar)4.902 F .752(guments on)-.234 F .701
(the stack, rather than)33.336 372 R F3 -1.8(pushl)3.051 G F1 7.201(.T)
.9 G .7(his means that upon return from the called function, there)
-7.201 F(is no need to adjust the stack pointer)33.336 387 Q(.)-.715 E
F2(SP)209.388 417 Q(ARC Ar)-.962 E(chitectur)-.234 E(e)-.234 E F1 3.189
-1.04(We w)33.336 453 T 1.109(ill look at the SP)1.04 F 1.109
(ARC architecture as an e)-1.196 F 1.109(xample of RISC.)-.195 F(SP)7.61
E 1.11(ARC, as with most)-1.196 F 1.445(RISC designs, is shockingly dif)
33.336 468 R 1.444(ferent from X86.)-.325 F 1.444
(Almost all instructions are 3-address,)7.944 F 2.467
(with src1, src2 and dst.)33.336 483 R 2.468(There is an emphasis on re)
8.968 F(gister)-.195 E(-to-re)-.26 E 2.468(gister operations, with)-.195
F 3.077(limited memory addressing modes.)33.336 498 R 3.077
(Instructions e)9.577 F -.195(xe)-.195 G 3.077
(cute in constant time \(one clock).195 F -.195(cy)33.336 513 S
(cle\), and are of \214x).195 E(ed length \(32 bits\), which impro)-.195
E -.195(ve)-.195 G 3.25(sp).195 G(ipeline performance.)-3.25 E F2
(Register Model)224.917 543 Q F1(There are 32 re)33.336 573 Q 3.25
(gisters, r0-r31. These)-.195 F(are brok)3.25 E(en into four groups:)
-.13 E/F4 10/Courier@0 SF 21.6(r0-r7 ==)90.936 585 R 61.2(g0-g7 Global)6
F(registers \(g0 is /dev/null\))6 E 15.6(r8-r15 ==)90.936 597 R 61.2
(o0-o7 Outs)6 F 9.6(r16-r23 ==)90.936 609 R 61.2(l0-l7 Locals)6 F 9.6
(r24-r31 ==)90.936 621 R 61.2(i0-i7 Ins)6 F F1
(The names %i0, etc. are aliases for %r24, etc.)33.336 642 Q F2(Addr)
215.992 672 Q(essing Modes)-.234 E F1(SP)33.336 702 Q .132
(ARC has a limited number of addressing modes.)-1.196 F .132
(Almost all instructions are 3-address,)6.632 F 4.747(with tw)33.336 717
R 7.997(oe)-.13 G 4.746(xplicit source operands and one e)-8.192 F 4.746
(xplicit destination \(contrast with the)-.195 F 2.171
(2-address X86 with an implicit operand\).)33.336 732 R 2.171
(Exceptions to this are instructions where it)8.671 F 0 Cg EP
%%Page: 26 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 26)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(doesn')33.336 120 Q 3.483(tm)-.234 G(ak)-3.483 E
3.483(es)-.13 G .233(ense to ha)-3.483 F .622 -.195(ve 3 o)-.26 H 3.482
(perands. An).195 F 3.482(yo)-.195 G 3.482(ft)-3.482 G .232
(he operands may be a re)-3.482 F(gister)-.195 E 9.982(.B)-.715 G
(ecause)-9.982 E 4.149(there are 32 addressable re)33.336 135 R 4.149
(gisters, 5 bits are required to specify a re)-.195 F(gister)-.195 E
10.649(.M)-.715 G(ost)-10.649 E 1.573(instructions also allo)33.336 150
R 4.822(wj)-.325 G 1.572
(ust one of the source operands to be a 13-bit immediate v)-4.822 F
(alue.)-.325 E 4.241 -1.04(We w)33.336 165 T 2.161(ill see ho)1.04 F
5.411(w3)-.325 G 2.161(2-bit immediate v)-5.411 F 2.161
(alues are handled later)-.325 F 8.661(.M)-.715 G 2.161
(ost instructions do not)-8.661 F(allo)33.336 180 Q 4.838(wd)-.325 G
1.588(irect access to memory operands; the)-4.838 F 4.838(ym)-.195 G
1.588(ust go through a re)-4.838 F 1.588(gister using special)-.195 F
(load/store instructions.)33.336 195 Q/F2 13/Times-Bold@0 SF(Register W)
216.785 225 Q(indo)-.234 E(ws)-.13 E F1 2.254
(One of the most interesting aspects of the re)33.336 261 R 2.254
(gister model is re)-.195 F 2.254(gister windo)-.195 F 5.504(wing. The)
-.325 F(re)33.336 276 Q .81(gister windo)-.195 F 4.06(wi)-.325 G 4.06
(st)-4.06 G .81(he set of 24 re)-4.06 F .81(gisters r8-r31.)-.195 F .809
(The processor contains a "re)7.31 F .809(gister \214le")-.195 F .171
(which is a lar)33.336 291 R .171(ge array of re)-.234 F 3.422
(gisters. The)-.195 F .172(global re)3.422 F .172(gisters are al)-.195 F
-.13(wa)-.13 G .172(ys a).13 F -.325(va)-.26 G .172(ilable, b).325 F
.172(ut the other)-.26 F(re)33.336 306 Q .672
(gisters are accessed through the 24-re)-.195 F .672(gister windo)-.195
F 2.362 -.845(w, w)-.325 H .672(hich mo).845 F -.195(ve)-.195 G 3.921
(so).195 G -.195(ve)-4.116 G 3.921(rt).195 G .671(he re)-3.921 F .671
(gister \214le)-.195 F 1.588(based on a hidden re)33.336 321 R 1.588
(gister \(manipulated by the operating system\) called CWP \(current)
-.195 F(windo)33.336 336 Q 3.25(wp)-.325 G(ointer\).)-3.25 E(Whene)
33.336 357 Q -.195(ve)-.325 G 4.241(raf).195 G .991
(unction is entered, a SA)-4.241 F .991(VE instruction is e)-1.755 F
-.195(xe)-.195 G .991(cuted, which mo).195 F -.195(ve)-.195 G 4.241(st)
.195 G .991(he CWP)-4.241 F 1.339(ahead by 16 slots.)33.336 372 R 1.34
(Since the re)7.84 F 1.34(gister windo)-.195 F 4.59(wi)-.325 G 4.59(s2)
-4.59 G 4.59(4s)-4.59 G 1.34(lots, this creates an 8-slot o)-4.59 F
-.195(ve)-.195 G(rlap,).195 E .539(with the result that re)33.336 387 R
.538(gisters %o0-%o7 in the caller refer to the same re)-.195 F .538
(gister as %i0-%i7)-.195 F .876(in the callee.)33.336 402 R(Lik)7.376 E
-.325(ew)-.13 G .876(ise, when the function returns, the REST).325 F
.877(ORE instruction mo)-.234 F -.195(ve)-.195 G 4.127(st).195 G(he)
-4.127 E(windo)33.336 417 Q 6.735(wb)-.325 G 3.485(ack, and the v)-6.735
F 3.485(alues that were in %i0-%i7 in the callee are accessible as)-.325
F(%o0-%o7 in the caller)33.336 432 Q(.)-.715 E 2.161(This f)33.336 453 R
2.161(act is used to great adv)-.13 F 2.162(antage to allo)-.325 F 5.412
(wf)-.325 G 2.162(unction calling and return without e)-5.412 F -.195
(ve)-.325 G(r).195 E(ha)33.336 468 Q .616
(ving to touch the stack memory)-.26 F 7.116(.%)-.845 G .616
(o0-%o5 are used to pass the \214rst 6 parameters of a)-7.116 F 1.62
(function, with %o0 being the leftmost.)33.336 483 R 1.621
(\(If there are more than 6 parameters, the e)8.12 F(xtra)-.195 E 1.255
(ones are pushed on the stack.)33.336 498 R 1.255(Studies of man)7.755 F
4.504(yl)-.195 G 1.254(ines of C code sho)-4.504 F 1.254
(wed this happens in)-.325 F(less than 2% of functions\).)33.336 513 Q
.408(The CALL instruction stores its o)33.336 534 R .409
(wn address in re)-.325 F .409(gister %o7 in the caller windo)-.195 F
2.099 -.845(w, w)-.325 H(hich).845 E .615
(becomes %i7 in the callee windo)33.336 549 R 3.865(w\()-.325 G .615
(after the callee e)-3.865 F -.195(xe)-.195 G .615(cutes the SA).195 F
.615(VE instruction.\))-1.755 F(The)7.115 E .286
(RET instruction, which is e)33.336 564 R -.195(xe)-.195 G .286
(cuted after a REST).195 F .286(ORE, jumps back to %i7+8, i.e. the ne)
-.234 F(xt)-.195 E 1.322
(instruction after the CALL \(and the delay slot instruction, see belo)
33.336 579 R 4.572(w\). Re)-.325 F 1.322(gister %o6 is)-.195 F 1.327
(aliased to %sp, the stack pointer)33.336 594 R 7.828(.I)-.715 G 4.578
(nt)-7.828 G 1.328(he callee, %i6 is then automatically the old stack)
-4.578 F(pointer)33.336 609 Q 4.345(,a)-.52 G 1.095
(nd is aliased to %fp \(the frame pointer\).)-4.345 F 1.095(The SA)7.595
F 1.094(VE instruction, in addition to)-1.755 F(mo)33.336 624 Q .499
(ving the re)-.195 F .499(gister windo)-.195 F 2.189 -.845(w, c)-.325 H
.5(an be used to decrement %sp \(in the callee').845 F 3.75(sn)-.715 G
1.15 -.325(ew w)-3.75 H(indo).325 E(w\))-.325 E 2.714
(to create the local stack frame.)33.336 639 R 2.714(The REST)9.214 F
2.714(ORE instruction, by virtue of its windo)-.234 F(w)-.325 E
(rollback, restores the old %sp and %fp implicitly)33.336 654 Q(.)-.845
E .996(The number of re)33.336 675 R .996(gisters in the \214le is of c\
ourse \214nite, and typically a small number)-.195 F 4.247(,e)-.52 G
(.g.)-4.247 E .4(32 re)33.336 690 R .4(gister windo)-.195 F 3.65
(ws. When)-.325 F .4(nesting reaches this static limit, the SA)3.65 F .4
(VE instruction has no)-1.755 F .092(place to mo)33.336 705 R .483 -.195
(ve t)-.195 H .093(he re).195 F .093(gister windo)-.195 F 1.783 -.845
(w, b)-.325 H .093(ecause it w).845 F .093
(ould collide with the oldest windo)-.13 F 5.033 -.845(w. T)-.325 H(his)
.845 E 2.656
(results in a "spill trap", which the operating system handles.)33.336
720 R(Ex)9.156 E 2.656(ecuting a FLUSHW)-.195 F 1.515
(instruction \215ushes the current re)33.336 735 R 1.515(gister windo)
-.195 F 4.765(wt)-.325 G 4.765(ot)-4.765 G 1.515(he top of the stack.)
-4.765 F 1.515(This instruction)8.015 F 0 Cg EP
%%Page: 27 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 27)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF .898(can also be e)33.336 120 R -.195(xe)-.195 G
.898(cuted by ordinary programs.).195 F .898(E.g. a deb)7.398 F .898
(ugger needs to g)-.26 F .897(ain access to the)-.065 F .69
(complete set of re)33.336 135 R .69(gister windo)-.195 F 3.94(ws. It)
-.325 F .69(must e)3.94 F -.195(xe)-.195 G .69
(cute a FLUSHW on behalf of the program).195 F(under observ)33.336 150 Q
(ation so those v)-.325 E(alues become visible on the stack.)-.325 E
.135(Because a function can not predict when such a re)33.336 171 R .135
(gister windo)-.195 F 3.385(ws)-.325 G .135(pill will happen, it must)
-3.385 F(reserv)33.336 186 Q 3.563(eac)-.195 G .313(hunk of space at th\
e top of the stack so there will be a place to spill its re)-3.563 F
(gister)-.195 E(windo)33.336 201 Q 3.25(wi)-.325 G 3.25(fn)-3.25 G 3.25
(eeded. This)-3.25 F
(spill area is added to the stack frame size requirements.)3.25 E .452
(It follo)33.336 222 R .452(ws from the re)-.325 F .452(gister windo)
-.195 F 3.702(wm)-.325 G .452(echanics that the compiler al)-3.702 F
-.13(wa)-.13 G .452(ys has the %l0-%l7).13 F 1.937(local re)33.336 237 R
1.937(gisters a)-.195 F -.325(va)-.26 G 5.187(ilable. It).325 F 1.937
(does not ha)5.187 F 2.327 -.195(ve t)-.26 H 5.187(ow).195 G 1.937
(orry about their being o)-5.317 F -.195(ve)-.195 G 1.937(rwritten by a)
.195 F .565(called function, nor does it need to sa)33.336 252 R .955
-.195(ve a)-.26 H .564(nd restore them e).195 F(xplicitly)-.195 E 7.064
(.T)-.845 G .564(he global re)-7.064 F(gisters)-.195 E 1.246
(%g1-%g7 are considered scratch re)33.336 267 R 1.247
(gisters, i.e. caller)-.195 F(-sa)-.26 E -.195(ve)-.26 G 4.497(dr).195 G
-.195(eg)-4.497 G 4.497(isters. It).195 F 1.247(is e)4.497 F 1.247
(xpected that)-.195 F 2.606(the g re)33.336 282 R 2.606
(gisters will be destro)-.195 F 2.606(yed across function boundaries.)
-.13 F(Lik)9.106 E -.325(ew)-.13 G 2.606(ise the %o0-%o5).325 F(re)
33.336 297 Q 1.177(gisters can be used as e)-.195 F 1.178
(xtra scratch re)-.195 F 1.178(gisters when the)-.195 F 4.428(ya)-.195 G
1.178(re not acti)-4.428 F -.195(ve)-.325 G 1.178(ly being used to).195
F(pass function ar)33.336 312 Q(guments.)-.234 E/F2 13/Times-Bold@0 SF
(Register g0)236.11 342 Q F1 .589(The %g0 re)33.336 372 R .589
(gister al)-.195 F -.13(wa)-.13 G .589
(ys reads as 0, and writes to it ha).13 F .979 -.195(ve n)-.26 H 3.839
(oe).195 G -.325(ff)-3.839 G 3.839(ect. Since).325 F .588(the number of)
3.838 F 1.183(operands is \214x)33.336 387 R 1.183(ed, it is useful whe\
n it is desired to discard the result of an operation, or)-.195 F
(when an immediate 0 is needed b)33.336 402 Q(ut it isn')-.26 E 3.25(tc)
-.234 G(on)-3.25 E -.195(ve)-.52 G
(nient to use the 13 bit immediate mode.).195 E F2(Accessing Memory)
214.809 432 Q F1 6.99(There are only tw)33.336 468 R 10.239(oo)-.13 G
6.989(rdinary instructions which access memory)-10.239 F 10.239(,L)-.845
G 10.239(Da)-10.239 G 6.989(nd ST)-10.239 F(\(LO)33.336 483 Q(AD/ST)
-.455 E 6.017(ORE\). The)-.234 F -.325(va)6.017 G 2.767(lue to be mo)
.325 F -.195(ve)-.195 G 6.017(di).195 G 6.017(sc)-6.017 G 2.767
(ontained in a re)-6.017 F(gister)-.195 E 9.267(.T)-.715 G 2.767
(he address in)-9.267 F 1.896
(memory to be accessed is also contained in a re)33.336 498 R(gister)
-.195 E 8.395(.S)-.715 G 1.895(ince LD and ST ha)-8.395 F 2.285 -.195
(ve o)-.26 H 1.895(nly 2).195 F 1.497
(operands, there is room within the 32-bit instruction to allo)33.336
513 R 4.747(wa1)-.325 G 1.497(3-bit immediate v)-4.747 F(alue)-.325 E
(\(of)33.336 528 Q 5.286(fset\) to be added to the re)-.325 F 5.285
(gister specifying the memory address.)-.195 F 5.285(While this)11.785 F
(restricti)33.336 543 Q -.195(ve)-.325 G 2.439
(ness surrounding memory access may seem inef).195 F 2.439
(\214cient, recall that the RISC)-.325 F(philosoph)33.336 558 Q 3.426
(yi)-.065 G 3.425(st)-3.426 G 3.425(or)-3.425 G .175
(educe the instruction set to its bare essentials.)-3.425 F .175
(On a CISC machine such)6.675 F 1.266
(as X86 with its indirect scaled of)33.336 573 R 1.267
(fset plus displacement addressing mode, the processor)-.325 F(tak)
33.336 588 Q 3.008(es just as man)-.13 F 6.258(ys)-.195 G 3.008
(teps to perform the address calculation, the)-6.258 F 6.257(ya)-.195 G
3.007(re just hidden in)-6.257 F 4.067(internal re)33.336 603 R 7.317
(gisters. In)-.195 F 4.068
(addition, by isolating memory access to speci\214c instructions,)7.317
F(compiler optimizations are actually easier)33.336 618 Q(.)-.715 E/F3
10/Courier@0 SF(f\(\))33.336 654 Q({)33.336 666 Q(int a;)33.336 678 Q
(a++;)81.336 690 Q(})33.336 702 Q(f:)33.336 726 Q(save %sp,-120,%sp)
81.336 738 Q(!120 bytes for stack frame)22.8 E 0 Cg EP
%%Page: 28 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 28)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(ld [%fp-20],%o1)81.336 117 Q(!Load a into register o1)
92.4 E(add %o1,1,%o0)81.336 129 Q
(!Not optimized, could have stored back in o1)104.4 E(mov %o0,%o1)81.336
141 Q(st %o1,[%fp-20])81.336 153 Q(!Store result back in local variable)
92.4 E(ret)90.936 165 Q 124.8(restore !Delay)90.936 177 R
(slot, see comment in text)6 E/F2 13/Times-Bold@0 SF
(Loading 32-bit constants)198.715 207 Q/F3 13/Times-Roman@0 SF 2.179
(The structure of the 32-bit instruction w)33.336 243 R 2.178
(ords does not lend itself to getting 32-bit \(or)-.13 F 1.113
(64-bit for that matter\) constants into re)33.336 258 R 4.363
(gisters. It)-.195 F -.13(wa)4.363 G 4.363(sf).13 G 1.113
(ound from program analysis that)-4.363 F 1.916(most inte)33.336 273 R
1.916(ger constants used in C programs are small, and therefore the pro)
-.195 F 1.915(vision of a)-.195 F
(13-bit immediate \214eld, while strange, satis\214es most cases.)33.336
288 Q(Ho)33.336 309 Q(we)-.325 E -.195(ve)-.325 G 3.382 -.52(r, t).195 H
5.592(oa).52 G 2.343(ccess a global v)-5.592 F 2.343
(ariable requires loading an absolute 32 bit v)-.325 F 2.343
(alue into a)-.325 F(re)33.336 324 Q .276
(gister \(or 64 bits if in the 64 bit model\).)-.195 F .276
(This requires tw)6.776 F 3.526(oi)-.13 G .276(nstructions in SP)-3.526
F 3.526(ARC. The)-1.196 F 2.494(SETHI instruction is a special case.)
33.336 339 R 2.494(It speci\214es a destination re)8.994 F 2.494
(gister and 22 bits of)-.195 F .827
(constant, which are placed in the most signi\214cant bits of the re)
33.336 354 R(gister)-.195 E 7.326(.F)-.715 G(ollo)-7.521 E .826
(wing this, an)-.325 F 2.667
(OR with a 13-bit immediate as one source, and the re)33.336 369 R 2.667
(gister as the other source and)-.195 F 2.013(destination, ef)33.336 384
R 2.013(fects the 32-bit constant load.)-.325 F 2.012
(It may also be possible to use the 13-bit)8.512 F(of)33.336 399 Q
(fset addressing mode to accomplish the same ef)-.325 E(fect:)-.325 E F1
(f\(\))33.336 411 Q({)33.336 423 Q(extern int a,b;)33.336 435 Q(a=b;)
81.336 447 Q(})33.336 459 Q(f:)33.336 495 Q(save %sp,-112,%sp)81.336 507
Q(sethi %hi\(a\),%o0)81.336 519 Q(sethi %hi\(b\),%o1)81.336 531 Q
(ld [%o1+%lo\(b\)],%o2)81.336 543 Q(st %o2,[%o0+%lo\(a\)])81.336 555 Q
F3 3.517(Note the unusual syntax %hi\(symbol\).)33.336 576 R 3.517
(This is not a re)10.017 F 3.518(gister at all, b)-.195 F 3.518
(ut merely an)-.26 F .244(assembly-language macro that e)33.336 591 R
-.325(va)-.325 G .244(luates the most signi\214cant 22 bit of its v).325
F 3.493(alue. Lik)-.325 F -.325(ew)-.13 G(ise).325 E 2.766
(%lo is the least signi\214cant 13 bits.)33.336 606 R 2.766
(Also note the use of the re)9.266 F(gister+of)-.195 E 2.767
(fset indirect)-.325 F(addressing mode in the LD and ST instructions.)
33.336 621 Q 2.34(When e)33.336 642 R -.195(xe)-.195 G 2.339
(cuting under the 64-bit model, the code to access a global v).195 F
2.339(ariable is e)-.325 F -.195(ve)-.325 G(n).195 E(hairier:)33.336 657
Q F1 12(sethi %hh\(a\),)81.336 669 R(%g1)6 E 12(sethi %lm\(a\),)81.336
681 R(%g4)6 E 30(or %g1,)81.336 693 R(%hm\(a\), %g1)6 E 18(sllx %g1,)
81.336 705 R(32, %g1)6 E 24(add %g1,)81.336 717 R(%g4, %g1)6 E 30
(or %g1,)81.336 729 R(%lo\(a\), %g5)6 E 12(sethi %hh\(b\),)81.336 741 R
(%g1)6 E 0 Cg EP
%%Page: 29 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 29)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF 12(sethi %lm\(b\),)81.336 117 R(%g4)6 E 30(or %g1,)
81.336 129 R(%hm\(b\), %g1)6 E 18(sllx %g1,)81.336 141 R(32, %g1)6 E 24
(add %g1,)81.336 153 R(%g4, %g1)6 E 30(or %g1,)81.336 165 R
(%lo\(b\), %g1)6 E 30(ld [%g1],)81.336 177 R(%g1)6 E 30(st %g1,)81.336
189 R([%g5])6 E/F2 13/Times-Bold@0 SF(Contr)195.296 219 Q(ol Flo)-.234 E
3.25(wI)-.13 G(nstructions)-3.25 E/F3 13/Times-Roman@0 SF 3.601(It is p\
ossible to jump to an absolute address which is contained within a re)
33.336 255 R(gister)-.195 E(.)-.715 E(Ho)33.336 270 Q(we)-.325 E -.195
(ve)-.325 G 3.543 -.52(r, m).195 H 2.503(ost \215o).52 F 5.753(wc)-.325
G 2.502(ontrol instructions utilize a program counter relati)-5.753 F
2.892 -.195(ve a)-.325 H(ddressing).195 E 4.109(mode. The)33.336 285 R
4.109(conditional branch)4.109 F .859
(instructions contain a displacement which is between 16)4.109 F .976
(and 22 bits \(depending on the form of the instruction\).)33.336 300 R
.976(This displacement is interpreted)7.476 F 1.506
(as a signed number of 4-byte w)33.336 315 R 4.756(ords. Since)-.13 F
1.507(branches in C occur within a function, the)4.756 F .443
(branch tar)33.336 330 R .443(get is usually close by)-.234 F 3.693(,a)
-.845 G .443(nd this amount of displacement is more than adequate.)
-3.693 F .262
(CALL instructions, which are used to call another function, ha)33.336
345 R .652 -.195(ve 3)-.26 H 3.512(0b).195 G .262(its of displacement.)
-3.512 F 1.196(This does impose a limit on ho)33.336 360 R 4.446(wt)
-.325 G 1.196(he address space of a program is laid out.)-4.446 F
(Functions)7.696 E(can not be more than 2**31 bytes a)33.336 375 Q -.13
(wa)-.195 G 3.25(yf).13 G(rom each other in either direction.)-3.25 E F2
(The Delay Slot)226.529 405 Q F3 2.354(When a SP)33.336 441 R 2.354
(ARC processor is e)-1.196 F -.325(va)-.325 G 2.354
(luating a branch instruction, the instruction which is).325 F 1.023
(located ph)33.336 456 R 1.023(ysically at the ne)-.065 F 1.023
(xt memory address after that branch instruction has, because)-.195 F
4.114(of the pipeline, already been fetched and decoded.)33.336 471 R
4.114(Under CISC architecture, that)10.614 F 1.76(instruction w)33.336
486 R 1.76(ould be thro)-.13 F 1.76(wn a)-.325 F -.13(wa)-.195 G 5.01
(yi).13 G 5.01(ft)-5.01 G 1.76(he branch is tak)-5.01 F 1.759(en, b)-.13
F 1.759(ut SP)-.26 F 1.759(ARC \(and man)-1.196 F 5.009(yo)-.195 G(ther)
-5.009 E .553(RISC architectures\) tak)33.336 501 R 3.803(ea)-.13 G(dv)
-3.803 E .554
(antage of it \(it helps that all instructions are the same length)-.325
F 1.527(and e)33.336 516 R -.195(xe)-.195 G 1.527(cution time\) and e)
.195 F -.195(xe)-.195 G 1.526(cute this "delay slot" instruction, re)
.195 F -.065(ga)-.195 G 1.526(rdless of whether the).065 F .232
(branch is tak)33.336 531 R .232(en or not.)-.13 F .232
(The delay slot instruction is e)6.732 F -.195(xe)-.195 G .233
(cuted as the branch tar).195 F .233(get is being)-.234 F .188
(fetched and decoded, and tak)33.336 546 R .188(es ef)-.13 F .188
(fect before that tar)-.325 F .187(get instruction.)-.234 F .187
(This can lead to code)6.687 F(which, when represented linearly)33.336
561 Q 3.25(,i)-.845 G 3.25(sd)-3.25 G(if)-3.25 E(\214cult to follo)-.325
E(w:)-.325 E F1(f\(a,b\))33.336 588 Q({)33.336 600 Q
(if \(g\(\)>5\) return 3; else return 4;)57.336 612 Q(})33.336 624 Q(f:)
33.336 648 Q(save %sp,-112,%sp)81.336 660 Q(call g,0)81.336 672 Q
(mov 3,%i0)81.336 684 Q(cmp %o0,5)81.336 696 Q(ble,a .LL5)81.336 708 Q
(mov 4,%i0)81.336 720 Q 148.8(ret !same)90.936 732 R(as jmpl)6 E
(%i7+8,%g0)37.2 E 0 Cg EP
%%Page: 30 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(6/pg 30)2.25 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(restore)90.936 117 Q/F2 13/Times-Roman@0 SF -.195(Fo)
33.336 138 S(llo).195 E 1.763(wing the CALL to function g, the MO)-.325
F 5.013(Vi)-.65 G 1.763(nstruction is e)-5.013 F -.195(xe)-.195 G 1.764
(cuted in the delay slot.).195 F .216(Because it tak)33.336 153 R .216
(es ef)-.13 F .216(fect before the \214rst instruction of the tar)-.325
F .215(get g, the %i0 still refers to the)-.234 F(re)33.336 168 Q 1.935
(gister in f)-.195 F 3.365 -.715('s w).715 H(indo).715 E 6.875 -.845
(w. L)-.325 H(ik).845 E -.325(ew)-.13 G 1.935(ise, the MO).325 F 5.185
(V4)-.65 G 1.935(,%i0 tak)-5.185 F 1.936
(es place in the delay slot of the)-.13 F 1.688
(conditional branch instruction.)33.336 183 R 1.688(The ,a follo)8.188 F
1.688(wing the branch opcode ble means that the)-.325 F 3.313
(delay slot instruction is anulled if the branch is not tak)33.336 198 R
3.313(en \(normally the delay slot)-.13 F 1.971(instruction is al)33.336
213 R -.13(wa)-.13 G 1.971(ys e).13 F -.195(xe)-.195 G 5.221
(cuted\). So).195 F 1.971(if the return v)5.221 F 1.971
(alue from function g is less than or)-.325 F .376
(equal to 5, then the correct return v)33.336 228 R .376
(alue from f \(4\) is already in the %i0 re)-.325 F .377
(gister when the)-.195 F 3.241(RET instruction is e)33.336 243 R -.195
(xe)-.195 G 6.491(cuted. If).195 F 3.24
(g\(\) is greater than 5, then the correct v)6.491 F 3.24(alue 3 w)-.325
F(as)-.13 E(pre)33.336 258 Q 2.17(viously in the %i0 re)-.325 F(gister)
-.195 E 8.67(.A)-.715 G 2.17(lso note the use of the REST)-8.67 F 2.17
(ORE instruction in the)-.234 F .572(delay slot.)33.336 273 R .571(Beca\
use it completes before the transfer of control back to the caller of f\
, the)7.072 F(re)33.336 288 Q 1.558(gister windo)-.195 F 4.808(wi)-.325
G 4.808(sp)-4.808 G 1.558(roperly restored.)-4.808 F 1.558
(If there is no useful w)11.308 F 1.559(ork to be done in a delay)-.13 F
(slot, it must be \214lled with a NOP instruction.)33.336 303 Q .768
(Note that the abo)33.336 324 R 1.158 -.195(ve ex)-.195 H .768
(ample is still not optimal, because the compiler w).195 F .768(as tar)
-.13 F .767(getting the)-.234 F 1.694(earlier SP)33.336 339 R 1.694
(ARC V8 instruction set.)-1.196 F 1.695(The SP)8.195 F 1.695
(ARC V9 instruction set includes conditional)-1.196 F(mo)33.336 354 Q
.39 -.195(ve i)-.195 H
(nstructions, which can often eliminate branches entirely:).195 E F1(f:)
33.336 366 Q 18(save %sp,)81.336 378 R(-112, %sp)6 E 18(call g,)81.336
390 R(0)6 E 24(mov 3,)81.336 402 R(%i0)6 E 24(cmp %o0,)81.336 414 R(5)6
E 6(return %i7+8)81.336 426 R 12(movle %icc,)81.336 438 R(4, %o0)6 E F2
1.08(Here the MO)33.336 459 R 1.08(VLE instruction conditionally mo)-.65
F -.195(ve)-.195 G 4.33(st).195 G 1.08(he v)-4.33 F 1.08
(alue 4 into %o0 if the condition)-.325 F .871(codes indicate less than\
 or equal \(the %icc identi\214es this as a 32-bit operation\), and thi\
s)33.336 474 R 4.143(instruction e)33.336 489 R -.195(xe)-.195 G 4.142
(cutes in the delay slot of the RETURN instruction \(which includes).195
F(REST)33.336 504 Q 2.264(ORE semantics\).)-.234 F 2.264(Because the re)
8.764 F 2.265(gister windo)-.195 F 5.515(wr)-.325 G 2.265
(ollback has already tak)-5.515 F 2.265(en place)-.13 F 1.91
(during the RETURN instruction, re)33.336 519 R 1.91
(gister %o0 in the MO)-.195 F 1.91(VLE instruction refers to the)-.65 F
(caller')33.336 534 Q 3.25(s%)-.715 G(o0, i.e. the return v)-3.25 E
(alue slot.)-.325 E/F3 13/Times-Bold@0 SF
(Delay Slot Annul and Branch Pr)155.315 564 Q(ediction)-.234 E F2 .302
(When a BR branch opcode has the ,a suf)33.336 594 R .303
(\214x, the delay slot is annulled if the branch is)-.325 F F3(not)3.553
E(tak)33.336 609 Q(en)-.13 E F2 6.926(.T)C .426(his allo)-6.926 F .426
(ws the compiler to ha)-.325 F .816 -.195(ve a b)-.26 H .425
(etter chance of \214nding a useful instruction to).195 F(mo)33.336 624
Q .39 -.195(ve i)-.195 H(nto the delay slot, which will only be e).195 E
-.195(xe)-.195 G(cuted when the branch is tak).195 E(en.)-.13 E 2.26
(The compiler can also add a branch prediction suf)33.336 654 R 2.26
(\214x to the opcode.)-.325 F 2.261(The ",pt" suf)8.76 F<8c78>-.325 E
.505(means that the branch is lik)33.336 669 R .505(ely to be tak)-.13 F
.505(en, while ",pn" means it is lik)-.13 F .504(ely to be not tak)-.13
F(en.)-.13 E 1.72(Branch prediction pro)33.336 684 R 1.72
(vides a helpful hint to the hardw)-.195 F 1.721
(are in modern processors where)-.13 F(se)33.336 699 Q -.195(ve)-.325 G
(ral instructions may be in play at an).195 E 3.25(yg)-.195 G -2.795
-.325(iv e)-3.25 H 3.25(nt).325 G(ime.)-3.25 E 0 Cg EP
%%Trailer
end
%%EOF
